---
- name: Remove existing installation if exists
  ansible.builtin.file:
    path: "{{ linuxfabrik_monitoring_plugins_dest_path }}"
    state: absent

- name: Install required packages
  ansible.builtin.package:
    name: "{{ linuxfabrik_monitoring_plugins_required_packages }}"
    state: present

- name: Install required PIP packages
  ansible.builtin.pip:
    name: "{{ linuxfabrik_monitoring_plugins_required_pip_packages }}"
    state: present
  environment:
    PIP_BREAK_SYSTEM_PACKAGES: 1

- name: Download Linuxfabrik Monitoring Plugins
  ansible.builtin.get_url:
    url: "{{ linuxfabrik_monitoring_plugins_url }}"
    dest: /tmp/linuxfabrik_monitoring_plugins.tar
    owner: "{{ linuxfabrik_monitoring_plugins_user }}"
    group: "{{ linuxfabrik_monitoring_plugins_group }}"
    force: true
    mode: "0640"

- name: Create the temporary directory
  ansible.builtin.file:
    path: /tmp/linuxfabrik_monitoring_plugins
    state: directory
    mode: "0750"
    owner: "{{ linuxfabrik_monitoring_plugins_user }}"
    group: "{{ linuxfabrik_monitoring_plugins_group }}"

- name: Extract the downloaded archive
  ansible.builtin.unarchive:
    src: /tmp/linuxfabrik_monitoring_plugins.tar
    dest: /tmp/linuxfabrik_monitoring_plugins
    remote_src: true
    owner: "{{ linuxfabrik_monitoring_plugins_user }}"
    group: "{{ linuxfabrik_monitoring_plugins_group }}"

- name: Create the destination directory
  ansible.builtin.file:
    path: "{{ linuxfabrik_monitoring_plugins_dest_path }}"
    state: directory
    recurse: true
    owner: "{{ linuxfabrik_monitoring_plugins_user }}"
    group: "{{ linuxfabrik_monitoring_plugins_group }}"

- name: Copy plugins to the destination directory
  ansible.builtin.shell: "cp -a /tmp/linuxfabrik_monitoring_plugins/usr/lib64/nagios/plugins/* {{ linuxfabrik_monitoring_plugins_dest_path }}/"
  register: command
  changed_when: command.rc == 0

- name: Remove the temporary directory
  ansible.builtin.file:
    path: /tmp/linuxfabrik_monitoring_plugins
    state: absent

- name: Remove the downloaded archive
  ansible.builtin.file:
    path: /tmp/linuxfabrik_monitoring_plugins.tar
    state: absent

- name: Create the command definitions destination directory
  ansible.builtin.file:
    path: "{{ linuxfabrik_monitoring_plugins_commands_dest_path }}"
    state: directory
    recurse: true
    owner: "{{ linuxfabrik_monitoring_plugins_user }}"
    group: "{{ linuxfabrik_monitoring_plugins_group }}"

- name: Copy the command definitions files
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ linuxfabrik_monitoring_plugins_commands_dest_path }}/{{ item | basename | regex_replace('\\.j2$', '') }}"
    mode: "0644"
    owner: "{{ linuxfabrik_monitoring_plugins_user }}"
    group: "{{ linuxfabrik_monitoring_plugins_group }}"
  with_fileglob:
    - ../templates/plugin-commands-linux/*.j2
  notify: Reload Icinga2

- name: Configure sudo
  ansible.builtin.template:
    src: linuxfabrik-sudoers.j2
    dest: /etc/sudoers.d/linuxfabrik-monitoring-plugins
    mode: "0644"
    owner: root
    group: root

- name: Include the command definitions destination directory
  ansible.builtin.lineinfile:
    path: "{{ linuxfabrik_monitoring_plugins_icinga_conf_file }}"
    regexp: '^(\/\/)?\s*include_recursive "{{ linuxfabrik_monitoring_plugins_commands_dest_path }}"'
    line: 'include_recursive "{{ linuxfabrik_monitoring_plugins_commands_dest_path }}"'
    state: present
  when: linuxfabrik_monitoring_plugins_commands_include
  notify: Reload Icinga2

- name: Create the installed status file
  ansible.builtin.file:
    path: /etc/icinga2/.linuxfabrik-monitoring-plugins.installed
    state: touch
    mode: "0644"
    owner: "{{ linuxfabrik_monitoring_plugins_user }}"
    group: "{{ linuxfabrik_monitoring_plugins_group }}"
