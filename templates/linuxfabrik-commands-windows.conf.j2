/*
Commands and services for 'apache-httpd-status' check from LinuxFabrik Monitoring Plugin:

Checks how well an Apache httpd server is performing.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/apache-httpd-status
*/

object CheckCommand "_win_linuxfabrik_apache_httpd_status" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\apache-httpd-status.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_apache_httpd_status_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_apache_httpd_status_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_apache_httpd_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_apache_httpd_status_critical$"
            description = "Set the CRIT threshold for the number of workers processing requests in percent. Default: >= 95"
        }
        "--url" = {
            value = "$linuxfabrik_apache_httpd_status_url$"
            description = "Apache Server Status URL. Default: http://localhost/server-status"
        }
        "--warning" = {
            value = "$linuxfabrik_apache_httpd_status_warning$"
            description = "Set the WARN threshold for the number of workers processing requests in percent. Default: >= 80"
        }
    }
}


/*
Commands and services for 'axenita-stats' check from LinuxFabrik Monitoring Plugin:

With this plugin you can track some values of the Aexnita application.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/axenita-stats
*/

object CheckCommand "_win_linuxfabrik_axenita_stats" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\axenita-stats.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_axenita_stats_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_axenita_stats_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_axenita_stats_always_ok$"
            description = "Always returns OK."
        }
        "--url" = {
            value = "$linuxfabrik_axenita_stats_url$"
            description = "Axenita API URL. Default:http://localhost:10000/achilles/ar"
        }
        "--test" = {
            value = "$linuxfabrik_axenita_stats_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_axenita_stats_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
    }
}


/*
Commands and services for 'countdown' check from LinuxFabrik Monitoring Plugin:

Warns before an expiration date is scheduled to occur.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/countdown
*/

object CheckCommand "_win_linuxfabrik_countdown" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\countdown.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_countdown_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_countdown_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_countdown_always_ok$"
            description = "Always returns OK."
        }
        "--input" = {
            value = "$linuxfabrik_countdown_input$"
            description = "'Display Name 1, yyyy-mm-dd, warn, crit' (repeating)"
            repeat_key = true
        }
    }
}


/*
Commands and services for 'cpu-usage' check from LinuxFabrik Monitoring Plugin:

be equal or above given thresholds before a warning is raised.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/cpu-usage
*/

object CheckCommand "_win_linuxfabrik_cpu_usage" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\cpu-usage.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_cpu_usage_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_cpu_usage_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_cpu_usage_always_ok$"
            description = "Always returns OK."
        }
        "--count" = {
            value = "$linuxfabrik_cpu_usage_count$"
            description = "Number of times the value has to be above the given thresholds. Default: 5"
        }
        "--critical" = {
            value = "$linuxfabrik_cpu_usage_critical$"
            description = "Set the critical threshold CPU Usage Percentage. Default: 90"
        }
        "--warning" = {
            value = "$linuxfabrik_cpu_usage_warning$"
            description = "Set the warning threshold CPU Usage Percentage. Default: 80"
        }
    }
}


/*
Commands and services for 'csv-values' check from LinuxFabrik Monitoring Plugin:

expression.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/csv-values
*/

object CheckCommand "_win_linuxfabrik_csv_values" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\csv-values.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_csv_values_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_csv_values_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_csv_values_always_ok$"
            description = "Always returns OK."
        }
        "--chunksize" = {
            value = "$linuxfabrik_csv_values_chunksize$"
            description = "Breaks up the transfer of data from the csv to the SQLite database in chunks as to not run out of memory. Default: 1000"
        }
        "--columns-query" = {
            value = "$linuxfabrik_csv_values_columns_query$"
            description = "Describe the columns and their datatypes using an sql statement. Example: `'col1 INTEGER PRIMARY KEY, col2 TEXT NOT NULL, col3 TEXT NOT NULL UNIQUE'`"
        }
        "--critical" = {
            value = "$linuxfabrik_csv_values_critical$"
            description = "Set the CRIT threshold. Supports ranges. Default: 'None'"
        }
        "--critical-query" = {
            value = "$linuxfabrik_csv_values_critical_query$"
            description = "`SELECT` statement. If its result contains more than one column, the number of rows is checked against `--critical`, otherwise the single value is used. Default: 'None'"
        }
        "--delimiter" = {
            value = "$linuxfabrik_csv_values_delimiter$"
            description = "CSV delimiter. Default: `','`"
        }
        "--filename" = {
            value = "$linuxfabrik_csv_values_filename$"
            description = "Path to CSV file. This is mutually exclusive with -u / --url."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_csv_values_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--newline" = {
            value = "$linuxfabrik_csv_values_newline$"
            description = "CSV newline. When reading input from the CSV, if newline is `None`, universal newlines mode is enabled. Lines in the input can end in `' '`, `' '`, or `' '`, and these are translated into `' '` before being returned to this plugin. If it is `''`, universal newlines mode is enabled, but line endings are returned to this plugin untranslated. If it has any of the other legal values, input lines are only terminated by the given string, and the line ending is returned to this plugin untranslated. Default: None"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_csv_values_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_csv_values_password$"
            description = "SMB or HTTP Basic Auth Password."
        }
        "--quotechar" = {
            value = "$linuxfabrik_csv_values_quotechar$"
            description = "CSV quotechar. Default: `'`"
        }
        "--skip-header" = {
            set_if = "$linuxfabrik_csv_values_skip_header$"
            description = "Treat the first row as header names. Default: True"
        }
        "--test" = {
            value = "$linuxfabrik_csv_values_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_csv_values_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_csv_values_url$"
            description = "Set the url of the CSV file, either starting with 'http://', 'https://' or 'smb://'. This is mutually exclusive with --filename."
        }
        "--username" = {
            value = "$linuxfabrik_csv_values_username$"
            description = "SMB or HTTP Basic Auth Username."
        }
        "--warning" = {
            value = "$linuxfabrik_csv_values_warning$"
            description = "Set the WARN threshold. Supports ranges. Default: 'None'"
        }
        "--warning-query" = {
            value = "$linuxfabrik_csv_values_warning_query$"
            description = "`SELECT` statement. If its result contains more than one column, the number of rows is checked against `--warning`, otherwise the single value is used. Default: 'None'"
        }
    }
}


/*
Commands and services for 'dhcp-scope-usage' check from LinuxFabrik Monitoring Plugin:

Checks the IPv4 scope usage for a Windows DHCP server service.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/dhcp-scope-usage
*/

object CheckCommand "_win_linuxfabrik_dhcp_scope_usage" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\dhcp-scope-usage.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_dhcp_scope_usage_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_dhcp_scope_usage_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_dhcp_scope_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_dhcp_scope_usage_critical$"
            description = "Set the CRIT threshold as a percentage. Default: >= 90"
        }
        "--hostname" = {
            value = "$linuxfabrik_dhcp_scope_usage_hostname$"
            description = "Specifies the DNS name, or IPv4 or IPv6 address, of the target computer that runs the DHCP server service. Default: localhost"
        }
        "--test" = {
            value = "$linuxfabrik_dhcp_scope_usage_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--warning" = {
            value = "$linuxfabrik_dhcp_scope_usage_warning$"
            description = "Set the WARN threshold as a percentage. Default: >= 80"
        }
        "--winrm-domain" = {
            value = "$linuxfabrik_dhcp_scope_usage_winrm_domain$"
            description = "WinRM Domain Name. Default: None"
        }
        "--winrm-hostname" = {
            value = "$linuxfabrik_dhcp_scope_usage_winrm_hostname$"
            description = "Target Windows computer on which the Windows commands are to be executed. Default: None"
        }
        "--winrm-password" = {
            value = "$linuxfabrik_dhcp_scope_usage_winrm_password$"
            description = "WinRM Account Password. Default: None"
        }
        "--winrm-transport" = {
            value = "$linuxfabrik_dhcp_scope_usage_winrm_transport$"
            description = "WinRM transport type. Default: ntlm"
        }
        "--winrm-username" = {
            value = "$linuxfabrik_dhcp_scope_usage_winrm_username$"
            description = "WinRM Account Name. Default: None"
        }
    }
}


/*
Commands and services for 'diacos' check from LinuxFabrik Monitoring Plugin:

ag.ch/loesungen/abrechnung/id-diacos/)

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/diacos
*/

object CheckCommand "_win_linuxfabrik_diacos" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\diacos.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_diacos_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_diacos_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_diacos_always_ok$"
            description = "Always return OK."
        }
        "--critical" = {
            value = "$linuxfabrik_diacos_critical$"
            description = "Critical threshold for duration of login+search+logout. Default: 6000 (ms)"
        }
        "--login-computer" = {
            value = "$linuxfabrik_diacos_login_computer$"
            description = "user.Login argument COMPUTER. Default: Brower_APP"
        }
        "--login-ip" = {
            value = "$linuxfabrik_diacos_login_ip$"
            description = "user.Login argument IP. Default: 127.0.0.1"
        }
        "--login-licence" = {
            value = "$linuxfabrik_diacos_login_licence$"
            description = "user.Login argument LICENCE (required)"
        }
        "--login-name" = {
            value = "$linuxfabrik_diacos_login_name$"
            description = "user.Login argument NAME (required)"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_diacos_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--search-concept-filter" = {
            value = "$linuxfabrik_diacos_search_concept_filter$"
            description = "classification.SearchDiagnoses argument CONCEPT_FILTER. Default: %25R239%3BC%3BD99.99"
        }
        "--search-country" = {
            value = "$linuxfabrik_diacos_search_country$"
            description = "classification.SearchDiagnoses argument COUNTRY. Default: CH"
        }
        "--search-format" = {
            value = "$linuxfabrik_diacos_search_format$"
            description = "classification.SearchDiagnoses argument FORMAT. Default: %25T0%25C%3F%25I%25R"
        }
        "--search-searchtext" = {
            value = "$linuxfabrik_diacos_search_searchtext$"
            description = "classification.SearchDiagnoses argument SEARCHTEXT. Default: Haut"
        }
        "--search-sort-mode" = {
            value = "$linuxfabrik_diacos_search_sort_mode$"
            description = "classification.SearchDiagnoses argument SORT_MODE. Default: %25T"
        }
        "--search-year" = {
            value = "$linuxfabrik_diacos_search_year$"
            description = "classification.SearchDiagnoses argument YEAR. Default:2020"
        }
        "--test" = {
            value = "$linuxfabrik_diacos_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_diacos_timeout$"
            description = "Network timeout in seconds. Default: 7 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_diacos_url$"
            description = "ID DIACOS URL. Default: http://localhost:9999"
        }
        "--warning" = {
            value = "$linuxfabrik_diacos_warning$"
            description = "Warning threshold for duration of login+search+logout. Default: 3000 (ms)"
        }
    }
}


/*
Commands and services for 'disk-io' check from LinuxFabrik Monitoring Plugin:

Checks disk IO.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/disk-io
*/

object CheckCommand "_win_linuxfabrik_disk_io" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\disk-io.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_disk_io_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_disk_io_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_disk_io_always_ok$"
            description = "Always returns OK."
        }
        "--count" = {
            value = "$linuxfabrik_disk_io_count$"
            description = "Number of times the value has to be above the given thresholds. Default: 5"
        }
        "--critical" = {
            value = "$linuxfabrik_disk_io_critical$"
            description = "Set the CRIT threshold for disk I/O read/write rate over the entire period as a percentage of the maximum disk I/O rate. Default: >= 90"
        }
        "--ignore" = {
            value = "$linuxfabrik_disk_io_ignore$"
            description = "Ignore some disks like 'sr0' or 'zram0' (repeating). Default: ['sr0', 'loop0', 'loop1', 'loop2', 'loop3', 'loop4', 'loop5', 'loop6', 'loop7', 'loop8', 'loop9', 'zram0']"
            repeat_key = true
        }
        "--warning" = {
            value = "$linuxfabrik_disk_io_warning$"
            description = "Set the CRIT threshold for disk I/O read/write rate over the entire period as a percentage of the maximum disk I/O rate. Default: >= 80"
        }
    }
}


/*
Commands and services for 'disk-smart' check from LinuxFabrik Monitoring Plugin:

the drive's SMART data to determine its health.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/disk-smart
*/

object CheckCommand "_win_linuxfabrik_disk_smart" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\disk-smart.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_disk_smart_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_disk_smart_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_disk_smart_always_ok$"
            description = "Always returns OK."
        }
        "--full" = {
            set_if = "$linuxfabrik_disk_smart_full$"
            description = "If set, also warn on any assumptions (in GSmartControl stated as 'notice' messages), otherwise just warn on 'real' SMART issues. Default: check warnings and alerts only."
        }
        "--ignore" = {
            value = "$linuxfabrik_disk_smart_ignore$"
            description = "A comma-separated list of disks which should be ignored, in the format 'sda,sdb'.Default: []"
        }
        "--test" = {
            value = "$linuxfabrik_disk_smart_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to-stderr- file,expected-retc'."
        }
    }
}


/*
Commands and services for 'disk-usage' check from LinuxFabrik Monitoring Plugin:

Checks the used disk space, for each partition.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/disk-usage
*/

object CheckCommand "_win_linuxfabrik_disk_usage" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\disk-usage.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_disk_usage_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_disk_usage_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_disk_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_disk_usage_critical$"
            description = "Set the critical threshold partition usage percentage. Default: 95"
        }
        "--ignore" = {
            value = "$linuxfabrik_disk_usage_ignore$"
            description = "Mountpoint to be ignored (repeating). The mountpoint is ignored if it starts with the specified value. Example: '/boot' ignores '/boot' as well as '/boot/efi'. On Windows, use drive letters without backslash ('Y:' or 'Y'). Default: []"
            repeat_key = true
        }
        "--warning" = {
            value = "$linuxfabrik_disk_usage_warning$"
            description = "Set the warning threshold partition usage percentage. Default: 90"
        }
    }
}


/*
Commands and services for 'dns' check from LinuxFabrik Monitoring Plugin:

other DNS servers. This command works with both IPv4 and IPv6.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/dns
*/

object CheckCommand "_win_linuxfabrik_dns" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\dns.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_dns_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_dns_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_dns_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_dns_critical$"
            description = "Return critical if elapsed time in ms exceeds value. Default: None"
        }
        "--hostname" = {
            value = "$linuxfabrik_dns_hostname$"
            description = "The host or ip address to check. Default: localhost"
        }
        "--port" = {
            value = "$linuxfabrik_dns_port$"
            description = "The port number. Default: 53"
        }
        "--type" = {
            value = "$linuxfabrik_dns_type$"
            description = "6,tcp,tcp6} Connection type. Can be optionally specified in order to narrow the list of addresses returned."
        }
        "--warning" = {
            value = "$linuxfabrik_dns_warning$"
            description = "Return warning if elapsed time in ms exceeds value. Default: None"
        }
    }
}


/*
Commands and services for 'dummy' check from LinuxFabrik Monitoring Plugin:

This check just returns the given message, state and perfdata.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/dummy
*/

object CheckCommand "_win_linuxfabrik_dummy" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\dummy.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_dummy_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_dummy_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_dummy_always_ok$"
            description = "Always returns OK."
        }
        "--message" = {
            value = "$linuxfabrik_dummy_message$"
            description = "The message to return. Default: Everything is ok."
        }
        "--perfdata" = {
            value = "$linuxfabrik_dummy_perfdata$"
            description = "The perfdata to return, formatted according to the nagios guidelines. Default: None"
        }
        "--state" = {
            value = "$linuxfabrik_dummy_state$"
            description = "The state to return (ok, warn, crit, unk). Default: ok"
        }
    }
}


/*
Commands and services for 'feed' check from LinuxFabrik Monitoring Plugin:

over.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/feed
*/

object CheckCommand "_win_linuxfabrik_feed" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\feed.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_feed_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_feed_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_feed_always_ok$"
            description = "Always returns OK."
        }
        "--icinga-service-name" = {
            value = "$linuxfabrik_feed_icinga_service_name$"
            description = "Unique name of the service using this check within Icinga. Take it from the `__name` service attribute, for example `icinga-server!my-service-name`."
        }
        "--icinga-password" = {
            value = "$linuxfabrik_feed_icinga_password$"
            description = "Icinga API password."
        }
        "--icinga-url" = {
            value = "$linuxfabrik_feed_icinga_url$"
            description = "Icinga API URL, for example https://icinga-server:5665"
        }
        "--icinga-username" = {
            value = "$linuxfabrik_feed_icinga_username$"
            description = "Icinga API username."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_feed_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--icinga-callback" = {
            set_if = "$linuxfabrik_feed_icinga_callback$"
            description = "Get the service acknowledgement from Icinga. Default:False"
        }
        "--latest" = {
            set_if = "$linuxfabrik_feed_latest$"
            description = "Return the newest/latest feed item (may be in the future)."
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_feed_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--no-summary" = {
            set_if = "$linuxfabrik_feed_no_summary$"
            description = "Do not show the feed item summary. Default: False"
        }
        "--timeout" = {
            value = "$linuxfabrik_feed_timeout$"
            description = "Network timeout in seconds. Default: 5 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_feed_url$"
            description = "The Feed URL. Default:https://www.heise.de/security/rss/alert-news-atom.xml"
        }
        "--warning" = {
            value = "$linuxfabrik_feed_warning$"
            description = "How long should this check return a warning on new entries? Default: 4320 (minutes)"
        }
    }
}


/*
Commands and services for 'file-age' check from LinuxFabrik Monitoring Plugin:

Checks the time of last data modification for a file or directory, in seconds.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/file-age
*/

object CheckCommand "_win_linuxfabrik_file_age" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\file-age.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_file_age_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_file_age_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_file_age_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_file_age_critical$"
            description = "Set the critical age threshold in seconds. Supports ranges. Default: >= 31536000s (365d)"
        }
        "--critical-count" = {
            value = "$linuxfabrik_file_age_critical_count$"
            description = "Set the critical threshold for the number of critical matches found. Supports ranges. Default: > 0"
        }
        "--filename" = {
            value = "$linuxfabrik_file_age_filename$"
            description = "File (or directory) name to check. Supports glob in accordance with https://docs.python.org/2.7/library/glob.html. Beware of using recursive globs. This is mutually exclusive with -u / --url."
        }
        "--only-dirs" = {
            set_if = "$linuxfabrik_file_age_only_dirs$"
            description = "Only consider directories."
        }
        "--only-files" = {
            set_if = "$linuxfabrik_file_age_only_files$"
            description = "Only consider files."
        }
        "--password" = {
            value = "$linuxfabrik_file_age_password$"
            description = "SMB: Password."
        }
        "--pattern" = {
            value = "$linuxfabrik_file_age_pattern$"
            description = "SMB: The search string to match against the names of SMB directories or files. This pattern can use '*' as a wildcard for multiple chars and '?' as a wildcard for a single char. Does not support regex patterns. Default: *."
        }
        "--perfdata-mode" = {
            value = "$linuxfabrik_file_age_perfdata_mode$"
            description = "Set the performance data aggregation mode. Default: None."
        }
        "--timeout" = {
            value = "$linuxfabrik_file_age_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_file_age_url$"
            description = "SMB: Set the url of the file (or directory) to check, starting with 'smb://'. This is mutually exclusive with --filename."
        }
        "--username" = {
            value = "$linuxfabrik_file_age_username$"
            description = "SMB: Username."
        }
        "--warning" = {
            value = "$linuxfabrik_file_age_warning$"
            description = "Set the warning age threshold in seconds. Supports ranges. Default: >= 2592000s (30d)"
        }
        "--warning-count" = {
            value = "$linuxfabrik_file_age_warning_count$"
            description = "Set the warning threshold for the number of critical matches found. Supports ranges. Default: > 0"
        }
    }
}


/*
Commands and services for 'file-count' check from LinuxFabrik Monitoring Plugin:

Checks the number of matching files.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/file-count
*/

object CheckCommand "_win_linuxfabrik_file_count" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\file-count.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_file_count_help$"
            description = "show this help message and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_file_count_always_ok$"
            description = "Always returns OK."
        }
        "--filename" = {
            value = "$linuxfabrik_file_count_filename$"
            description = "File (or directory) name to check. Supports glob in accordance with https://docs.python.org/2.7/library/glob.html. Beware of using recursive globs. This is mutually exclusive with -u / --url."
        }
        "--url" = {
            value = "$linuxfabrik_file_count_url$"
            description = "Set the url of the file (or directory) to check, starting with 'smb://'. This is mutually exclusive with --filename."
        }
        "--timeout" = {
            value = "$linuxfabrik_file_count_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--password" = {
            value = "$linuxfabrik_file_count_password$"
            description = "SMB Password."
        }
        "--pattern" = {
            value = "$linuxfabrik_file_count_pattern$"
            description = "The search string to match against the names of SMB directories or files. This pattern can use '*' as a wildcard for multiple chars and '?' as a wildcard for a single char. Does not support regex patterns. Default: *."
        }
        "--username" = {
            value = "$linuxfabrik_file_count_username$"
            description = "SMB Username."
        }
        "--only-dirs" = {
            set_if = "$linuxfabrik_file_count_only_dirs$"
            description = "Only consider directories."
        }
        "--only-files" = {
            set_if = "$linuxfabrik_file_count_only_files$"
            description = "Only consider files."
        }
        "--version" = {
            set_if = "$linuxfabrik_file_count_version$"
            description = "show program's version number and exit"
        }
        "--critical" = {
            value = "$linuxfabrik_file_count_critical$"
            description = "Set the critical number of files. Supports ranges."
        }
        "--warning" = {
            value = "$linuxfabrik_file_count_warning$"
            description = "Set the warning number of files. Supports ranges."
        }
        "--timerange" = {
            value = "$linuxfabrik_file_count_timerange$"
            description = "Set the timerange (seconds) in which the files should be considered. Supports ranges."
        }
    }
}


/*
Commands and services for 'file-size' check from LinuxFabrik Monitoring Plugin:

Checks the size for a file or directory, in bytes.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/file-size
*/

object CheckCommand "_win_linuxfabrik_file_size" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\file-size.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_file_size_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_file_size_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_file_size_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_file_size_critical$"
            description = "Set the critical size threshold in bytes. Default: >= 1073741824 (1G)"
        }
        "--filename" = {
            value = "$linuxfabrik_file_size_filename$"
            description = "File (or directory) name to check. Supports glob in accordance with https://docs.python.org/2.7/library/glob.html. Beware of using recursive globs. This is mutually exclusive with -u / --url."
        }
        "--pattern" = {
            value = "$linuxfabrik_file_size_pattern$"
            description = "The search string to match against the names of SMB directories or files. This pattern can use '*' as a wildcard for multiple chars and '?' as a wildcard for a single char. Does not support regex patterns. Default: *."
        }
        "--password" = {
            value = "$linuxfabrik_file_size_password$"
            description = "SMB Password."
        }
        "--timeout" = {
            value = "$linuxfabrik_file_size_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_file_size_url$"
            description = "Set the url of the file (or directory) to check, starting with 'smb://'. This is mutually exclusive with --filename."
        }
        "--username" = {
            value = "$linuxfabrik_file_size_username$"
            description = "SMB Username."
        }
        "--warning" = {
            value = "$linuxfabrik_file_size_warning$"
            description = "Set the warning size threshold in bytes. Default: >= 26214400 (100M)"
        }
    }
}


/*
Commands and services for 'fortios-cpu-usage' check from LinuxFabrik Monitoring Plugin:

values (or their defaults) are used.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/fortios-cpu-usage
*/

object CheckCommand "_win_linuxfabrik_fortios_cpu_usage" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\fortios-cpu-usage.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_fortios_cpu_usage_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_fortios_cpu_usage_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_fortios_cpu_usage_always_ok$"
            description = "Always returns OK."
        }
        "--count" = {
            value = "$linuxfabrik_fortios_cpu_usage_count$"
            description = "Number of times the value has to be above the given thresholds. Default: 5"
        }
        "--critical" = {
            value = "$linuxfabrik_fortios_cpu_usage_critical$"
            description = "Set the critical threshold CPU Usage Percentage. Default: 90"
        }
        "--hostname" = {
            value = "$linuxfabrik_fortios_cpu_usage_hostname$"
            description = "FortiOS-based Appliance address, optional including port ('192.168.1.1:443')."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_fortios_cpu_usage_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_fortios_cpu_usage_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_fortios_cpu_usage_password$"
            description = "FortiOS REST API Single Access Token."
        }
        "--timeout" = {
            value = "$linuxfabrik_fortios_cpu_usage_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--warning" = {
            value = "$linuxfabrik_fortios_cpu_usage_warning$"
            description = "Set the warning threshold CPU Usage Percentage. Default: 80"
        }
    }
}


/*
Commands and services for 'fortios-firewall-stats' check from LinuxFabrik Monitoring Plugin:

not via Session-based authentication, which is stated as "legacy".

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/fortios-firewall-stats
*/

object CheckCommand "_win_linuxfabrik_fortios_firewall_stats" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\fortios-firewall-stats.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_fortios_firewall_stats_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_fortios_firewall_stats_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_fortios_firewall_stats_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_fortios_firewall_stats_hostname$"
            description = "FortiOS-based Appliance address, optional including port ('192.168.1.1:443')."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_fortios_firewall_stats_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_fortios_firewall_stats_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_fortios_firewall_stats_password$"
            description = "FortiOS REST API Single Access Token."
        }
        "--timeout" = {
            value = "$linuxfabrik_fortios_firewall_stats_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
    }
}


/*
Commands and services for 'fortios-ha-stats' check from LinuxFabrik Monitoring Plugin:

authentication, which is stated as "legacy".

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/fortios-ha-stats
*/

object CheckCommand "_win_linuxfabrik_fortios_ha_stats" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\fortios-ha-stats.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_fortios_ha_stats_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_fortios_ha_stats_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_fortios_ha_stats_always_ok$"
            description = "Always returns OK."
        }
        "--count" = {
            value = "$linuxfabrik_fortios_ha_stats_count$"
            description = "Number of expected cluster members. Default: 2"
        }
        "--hostname" = {
            value = "$linuxfabrik_fortios_ha_stats_hostname$"
            description = "FortiOS-based Appliance address, optional including port ('192.168.1.1:443')."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_fortios_ha_stats_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_fortios_ha_stats_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_fortios_ha_stats_password$"
            description = "FortiOS REST API Single Access Token."
        }
        "--timeout" = {
            value = "$linuxfabrik_fortios_ha_stats_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
    }
}


/*
Commands and services for 'fortios-memory-usage' check from LinuxFabrik Monitoring Plugin:

given thresholds.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/fortios-memory-usage
*/

object CheckCommand "_win_linuxfabrik_fortios_memory_usage" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\fortios-memory-usage.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_fortios_memory_usage_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_fortios_memory_usage_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_fortios_memory_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_fortios_memory_usage_critical$"
            description = "Set the critical threshold for memory usage (in percent). Default: 88"
        }
        "--hostname" = {
            value = "$linuxfabrik_fortios_memory_usage_hostname$"
            description = "FortiOS-based Appliance address, optional including port ('192.168.1.1:443')."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_fortios_memory_usage_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_fortios_memory_usage_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_fortios_memory_usage_password$"
            description = "FortiOS REST API Single Access Token."
        }
        "--timeout" = {
            value = "$linuxfabrik_fortios_memory_usage_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--warning" = {
            value = "$linuxfabrik_fortios_memory_usage_warning$"
            description = "Set the warning threshold for memory usage (in percent). Default: 82"
        }
    }
}


/*
Commands and services for 'fortios-network-io' check from LinuxFabrik Monitoring Plugin:

PASSWORD [--timeout TIMEOUT] [-w WARN]

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/fortios-network-io
*/

object CheckCommand "_win_linuxfabrik_fortios_network_io" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\fortios-network-io.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_fortios_network_io_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_fortios_network_io_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_fortios_network_io_always_ok$"
            description = "Always returns OK."
        }
        "--count" = {
            value = "$linuxfabrik_fortios_network_io_count$"
            description = "Number of times the value has to be above the given thresholds. Default: 5"
        }
        "--critical" = {
            value = "$linuxfabrik_fortios_network_io_critical$"
            description = "Set the critical threshold for link saturation for <count> checks, in bps. Default: 900000000"
        }
        "--hostname" = {
            value = "$linuxfabrik_fortios_network_io_hostname$"
            description = "FortiOS-based Appliance address, optional including port ('192.168.1.1:443')."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_fortios_network_io_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_fortios_network_io_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_fortios_network_io_password$"
            description = "FortiOS REST API Single Access Token."
        }
        "--timeout" = {
            value = "$linuxfabrik_fortios_network_io_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--warning" = {
            value = "$linuxfabrik_fortios_network_io_warning$"
            description = "Set the warning threshold for link saturation for <count> checks, in bps. Default: 800000000"
        }
    }
}


/*
Commands and services for 'fortios-sensor' check from LinuxFabrik Monitoring Plugin:

Checks FortiOS sensor information in detail.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/fortios-sensor
*/

object CheckCommand "_win_linuxfabrik_fortios_sensor" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\fortios-sensor.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_fortios_sensor_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_fortios_sensor_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_fortios_sensor_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_fortios_sensor_hostname$"
            description = "FortiOS-based Appliance address, optional including port ('192.168.1.1:443')."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_fortios_sensor_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_fortios_sensor_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_fortios_sensor_password$"
            description = "FortiOS REST API Single Access Token."
        }
        "--timeout" = {
            value = "$linuxfabrik_fortios_sensor_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
    }
}


/*
Commands and services for 'fortios-version' check from LinuxFabrik Monitoring Plugin:

[--no-proxy] --password PASSWORD [--timeout TIMEOUT]

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/fortios-version
*/

object CheckCommand "_win_linuxfabrik_fortios_version" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\fortios-version.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_fortios_version_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_fortios_version_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_fortios_version_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_fortios_version_hostname$"
            description = "FortiOS-based Appliance address, optional including port ('192.168.1.1:443')."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_fortios_version_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_fortios_version_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_fortios_version_password$"
            description = "FortiOS REST API Single Access Token."
        }
        "--timeout" = {
            value = "$linuxfabrik_fortios_version_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
    }
}


/*
Commands and services for 'haproxy-status' check from LinuxFabrik Monitoring Plugin:

HAProxy server, current request rates, response times, and more.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/haproxy-status
*/

object CheckCommand "_win_linuxfabrik_haproxy_status" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\haproxy-status.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_haproxy_status_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_haproxy_status_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_haproxy_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_haproxy_status_critical$"
            description = "Set the CRIT threshold as a percentage. Default: >= 95"
        }
        "--lengthy" = {
            set_if = "$linuxfabrik_haproxy_status_lengthy$"
            description = "Extended reporting."
        }
        "--password" = {
            value = "$linuxfabrik_haproxy_status_password$"
            description = "HAProxy Stats Auth password."
        }
        "--test" = {
            value = "$linuxfabrik_haproxy_status_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_haproxy_status_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_haproxy_status_url$"
            description = "HAProxy Stats URI. Default: http://localhost/server-status"
        }
        "--username" = {
            value = "$linuxfabrik_haproxy_status_username$"
            description = "HAProxy Stats Auth username. Default: haproxy-stats"
        }
        "--warning" = {
            value = "$linuxfabrik_haproxy_status_warning$"
            description = "Set the WARN threshold as a percentage. Default: >= 80"
        }
    }
}


/*
Commands and services for 'huawei-dorado-backup-power' check from LinuxFabrik Monitoring Plugin:

system via the REST Interface, using the ``/backup_power`` endpoint.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/huawei-dorado-backup-power
*/

object CheckCommand "_win_linuxfabrik_huawei_dorado_backup_power" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\huawei-dorado-backup-power.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_huawei_dorado_backup_power_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_huawei_dorado_backup_power_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_huawei_dorado_backup_power_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_huawei_dorado_backup_power_cache_expire$"
            description = "The amount of time after which the credential cache expires, in minutes. Default: 15"
        }
        "--device-id" = {
            value = "$linuxfabrik_huawei_dorado_backup_power_device_id$"
            description = "Huawei OceanStor Dorado API Device ID."
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_huawei_dorado_backup_power_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_huawei_dorado_backup_power_password$"
            description = "Huawei OceanStor Dorado API Password."
        }
        "--scope" = {
            value = "$linuxfabrik_huawei_dorado_backup_power_scope$"
            description = "Huawei OceanStor Dorado API Scope."
        }
        "--test" = {
            value = "$linuxfabrik_huawei_dorado_backup_power_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_huawei_dorado_backup_power_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_huawei_dorado_backup_power_url$"
            description = "Huawei OceanStor Dorado API URL."
        }
        "--username" = {
            value = "$linuxfabrik_huawei_dorado_backup_power_username$"
            description = "Huawei OceanStor Dorado API Username."
        }
    }
}


/*
Commands and services for 'huawei-dorado-controller' check from LinuxFabrik Monitoring Plugin:

REST Interface, using the ``/controller`` endpoint.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/huawei-dorado-controller
*/

object CheckCommand "_win_linuxfabrik_huawei_dorado_controller" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\huawei-dorado-controller.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_huawei_dorado_controller_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_huawei_dorado_controller_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_huawei_dorado_controller_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_huawei_dorado_controller_cache_expire$"
            description = "The amount of time after which the credential cache expires, in minutes. Default: 15"
        }
        "--device-id" = {
            value = "$linuxfabrik_huawei_dorado_controller_device_id$"
            description = "Huawei OceanStor Dorado API Device ID."
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_huawei_dorado_controller_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_huawei_dorado_controller_password$"
            description = "Huawei OceanStor Dorado API Password."
        }
        "--scope" = {
            value = "$linuxfabrik_huawei_dorado_controller_scope$"
            description = "Huawei OceanStor Dorado API Scope."
        }
        "--test" = {
            value = "$linuxfabrik_huawei_dorado_controller_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_huawei_dorado_controller_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_huawei_dorado_controller_url$"
            description = "Huawei OceanStor Dorado API URL."
        }
        "--username" = {
            value = "$linuxfabrik_huawei_dorado_controller_username$"
            description = "Huawei OceanStor Dorado API Username."
        }
    }
}


/*
Commands and services for 'huawei-dorado-disk' check from LinuxFabrik Monitoring Plugin:

system via the REST Interface, using the ``/disk`` endpoint.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/huawei-dorado-disk
*/

object CheckCommand "_win_linuxfabrik_huawei_dorado_disk" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\huawei-dorado-disk.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_huawei_dorado_disk_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_huawei_dorado_disk_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_huawei_dorado_disk_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_huawei_dorado_disk_cache_expire$"
            description = "The amount of time after which the credential cache expires, in minutes. Default: 15"
        }
        "--device-id" = {
            value = "$linuxfabrik_huawei_dorado_disk_device_id$"
            description = "Huawei OceanStor Dorado API Device ID."
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_huawei_dorado_disk_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_huawei_dorado_disk_password$"
            description = "Huawei OceanStor Dorado API Password."
        }
        "--scope" = {
            value = "$linuxfabrik_huawei_dorado_disk_scope$"
            description = "Huawei OceanStor Dorado API Scope."
        }
        "--test" = {
            value = "$linuxfabrik_huawei_dorado_disk_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_huawei_dorado_disk_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_huawei_dorado_disk_url$"
            description = "Huawei OceanStor Dorado API URL."
        }
        "--username" = {
            value = "$linuxfabrik_huawei_dorado_disk_username$"
            description = "Huawei OceanStor Dorado API Username."
        }
    }
}


/*
Commands and services for 'huawei-dorado-enclosure' check from LinuxFabrik Monitoring Plugin:

system via the REST Interface, using the ``/enclosure`` endpoint.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/huawei-dorado-enclosure
*/

object CheckCommand "_win_linuxfabrik_huawei_dorado_enclosure" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\huawei-dorado-enclosure.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_huawei_dorado_enclosure_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_huawei_dorado_enclosure_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_huawei_dorado_enclosure_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_huawei_dorado_enclosure_cache_expire$"
            description = "The amount of time after which the credential cache expires, in minutes. Default: 15"
        }
        "--device-id" = {
            value = "$linuxfabrik_huawei_dorado_enclosure_device_id$"
            description = "Huawei OceanStor Dorado API Device ID."
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_huawei_dorado_enclosure_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_huawei_dorado_enclosure_password$"
            description = "Huawei OceanStor Dorado API Password."
        }
        "--scope" = {
            value = "$linuxfabrik_huawei_dorado_enclosure_scope$"
            description = "Huawei OceanStor Dorado API Scope."
        }
        "--test" = {
            value = "$linuxfabrik_huawei_dorado_enclosure_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_huawei_dorado_enclosure_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_huawei_dorado_enclosure_url$"
            description = "Huawei OceanStor Dorado API URL."
        }
        "--username" = {
            value = "$linuxfabrik_huawei_dorado_enclosure_username$"
            description = "Huawei OceanStor Dorado API Username."
        }
    }
}


/*
Commands and services for 'huawei-dorado-fan' check from LinuxFabrik Monitoring Plugin:

system via the REST Interface, using the ``/fan`` endpoint.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/huawei-dorado-fan
*/

object CheckCommand "_win_linuxfabrik_huawei_dorado_fan" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\huawei-dorado-fan.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_huawei_dorado_fan_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_huawei_dorado_fan_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_huawei_dorado_fan_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_huawei_dorado_fan_cache_expire$"
            description = "The amount of time after which the credential cache expires, in minutes. Default: 15"
        }
        "--device-id" = {
            value = "$linuxfabrik_huawei_dorado_fan_device_id$"
            description = "Huawei OceanStor Dorado API Device ID."
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_huawei_dorado_fan_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_huawei_dorado_fan_password$"
            description = "Huawei OceanStor Dorado API Password."
        }
        "--scope" = {
            value = "$linuxfabrik_huawei_dorado_fan_scope$"
            description = "Huawei OceanStor Dorado API Scope."
        }
        "--test" = {
            value = "$linuxfabrik_huawei_dorado_fan_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_huawei_dorado_fan_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_huawei_dorado_fan_url$"
            description = "Huawei OceanStor Dorado API URL."
        }
        "--username" = {
            value = "$linuxfabrik_huawei_dorado_fan_username$"
            description = "Huawei OceanStor Dorado API Username."
        }
    }
}


/*
Commands and services for 'huawei-dorado-host' check from LinuxFabrik Monitoring Plugin:

Dorado storage system via the REST Interface, using the ``/host`` endpoint.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/huawei-dorado-host
*/

object CheckCommand "_win_linuxfabrik_huawei_dorado_host" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\huawei-dorado-host.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_huawei_dorado_host_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_huawei_dorado_host_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_huawei_dorado_host_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_huawei_dorado_host_cache_expire$"
            description = "The amount of time after which the credential cache expires, in minutes. Default: 15"
        }
        "--device-id" = {
            value = "$linuxfabrik_huawei_dorado_host_device_id$"
            description = "Huawei OceanStor Dorado API Device ID."
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_huawei_dorado_host_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_huawei_dorado_host_password$"
            description = "Huawei OceanStor Dorado API Password."
        }
        "--scope" = {
            value = "$linuxfabrik_huawei_dorado_host_scope$"
            description = "Huawei OceanStor Dorado API Scope."
        }
        "--test" = {
            value = "$linuxfabrik_huawei_dorado_host_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_huawei_dorado_host_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_huawei_dorado_host_url$"
            description = "Huawei OceanStor Dorado API URL."
        }
        "--username" = {
            value = "$linuxfabrik_huawei_dorado_host_username$"
            description = "Huawei OceanStor Dorado API Username."
        }
    }
}


/*
Commands and services for 'huawei-dorado-hypermetrodomain' check from LinuxFabrik Monitoring Plugin:

endpoint.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/huawei-dorado-hypermetrodomain
*/

object CheckCommand "_win_linuxfabrik_huawei_dorado_hypermetrodomain" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\huawei-dorado-hypermetrodomain.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_huawei_dorado_hypermetrodomain_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_huawei_dorado_hypermetrodomain_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_huawei_dorado_hypermetrodomain_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_huawei_dorado_hypermetrodomain_cache_expire$"
            description = "The amount of time after which the credential cache expires, in minutes. Default: 15"
        }
        "--device-id" = {
            value = "$linuxfabrik_huawei_dorado_hypermetrodomain_device_id$"
            description = "Huawei OceanStor Dorado API Device ID."
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_huawei_dorado_hypermetrodomain_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_huawei_dorado_hypermetrodomain_password$"
            description = "Huawei OceanStor Dorado API Password."
        }
        "--scope" = {
            value = "$linuxfabrik_huawei_dorado_hypermetrodomain_scope$"
            description = "Huawei OceanStor Dorado API Scope."
        }
        "--test" = {
            value = "$linuxfabrik_huawei_dorado_hypermetrodomain_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_huawei_dorado_hypermetrodomain_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_huawei_dorado_hypermetrodomain_url$"
            description = "Huawei OceanStor Dorado API URL."
        }
        "--username" = {
            value = "$linuxfabrik_huawei_dorado_hypermetrodomain_username$"
            description = "Huawei OceanStor Dorado API Username."
        }
    }
}


/*
Commands and services for 'huawei-dorado-hypermetropair' check from LinuxFabrik Monitoring Plugin:

endpoint.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/huawei-dorado-hypermetropair
*/

object CheckCommand "_win_linuxfabrik_huawei_dorado_hypermetropair" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\huawei-dorado-hypermetropair.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_huawei_dorado_hypermetropair_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_huawei_dorado_hypermetropair_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_huawei_dorado_hypermetropair_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_huawei_dorado_hypermetropair_cache_expire$"
            description = "The amount of time after which the credential cache expires, in minutes. Default: 15"
        }
        "--device-id" = {
            value = "$linuxfabrik_huawei_dorado_hypermetropair_device_id$"
            description = "Huawei OceanStor Dorado API Device ID."
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_huawei_dorado_hypermetropair_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_huawei_dorado_hypermetropair_password$"
            description = "Huawei OceanStor Dorado API Password."
        }
        "--scope" = {
            value = "$linuxfabrik_huawei_dorado_hypermetropair_scope$"
            description = "Huawei OceanStor Dorado API Scope."
        }
        "--test" = {
            value = "$linuxfabrik_huawei_dorado_hypermetropair_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_huawei_dorado_hypermetropair_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_huawei_dorado_hypermetropair_url$"
            description = "Huawei OceanStor Dorado API URL."
        }
        "--username" = {
            value = "$linuxfabrik_huawei_dorado_hypermetropair_username$"
            description = "Huawei OceanStor Dorado API Username."
        }
    }
}


/*
Commands and services for 'huawei-dorado-interface' check from LinuxFabrik Monitoring Plugin:

storage system via the REST Interface, using the ``/intf_module`` endpoint.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/huawei-dorado-interface
*/

object CheckCommand "_win_linuxfabrik_huawei_dorado_interface" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\huawei-dorado-interface.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_huawei_dorado_interface_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_huawei_dorado_interface_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_huawei_dorado_interface_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_huawei_dorado_interface_cache_expire$"
            description = "The amount of time after which the credential cache expires, in minutes. Default: 15"
        }
        "--device-id" = {
            value = "$linuxfabrik_huawei_dorado_interface_device_id$"
            description = "Huawei OceanStor Dorado API Device ID."
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_huawei_dorado_interface_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_huawei_dorado_interface_password$"
            description = "Huawei OceanStor Dorado API Password."
        }
        "--scope" = {
            value = "$linuxfabrik_huawei_dorado_interface_scope$"
            description = "Huawei OceanStor Dorado API Scope."
        }
        "--test" = {
            value = "$linuxfabrik_huawei_dorado_interface_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_huawei_dorado_interface_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_huawei_dorado_interface_url$"
            description = "Huawei OceanStor Dorado API URL."
        }
        "--username" = {
            value = "$linuxfabrik_huawei_dorado_interface_username$"
            description = "Huawei OceanStor Dorado API Username."
        }
    }
}


/*
Commands and services for 'huawei-dorado-power' check from LinuxFabrik Monitoring Plugin:

storage system via the REST Interface, using the ``/power`` endpoint.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/huawei-dorado-power
*/

object CheckCommand "_win_linuxfabrik_huawei_dorado_power" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\huawei-dorado-power.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_huawei_dorado_power_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_huawei_dorado_power_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_huawei_dorado_power_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_huawei_dorado_power_cache_expire$"
            description = "The amount of time after which the credential cache expires, in minutes. Default: 15"
        }
        "--device-id" = {
            value = "$linuxfabrik_huawei_dorado_power_device_id$"
            description = "Huawei OceanStor Dorado API Device ID."
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_huawei_dorado_power_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_huawei_dorado_power_password$"
            description = "Huawei OceanStor Dorado API Password."
        }
        "--scope" = {
            value = "$linuxfabrik_huawei_dorado_power_scope$"
            description = "Huawei OceanStor Dorado API Scope."
        }
        "--test" = {
            value = "$linuxfabrik_huawei_dorado_power_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_huawei_dorado_power_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_huawei_dorado_power_url$"
            description = "Huawei OceanStor Dorado API URL."
        }
        "--username" = {
            value = "$linuxfabrik_huawei_dorado_power_username$"
            description = "Huawei OceanStor Dorado API Username."
        }
    }
}


/*
Commands and services for 'huawei-dorado-system' check from LinuxFabrik Monitoring Plugin:

storage system via the REST Interface, using the ``/system/`` endpoint.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/huawei-dorado-system
*/

object CheckCommand "_win_linuxfabrik_huawei_dorado_system" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\huawei-dorado-system.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_huawei_dorado_system_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_huawei_dorado_system_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_huawei_dorado_system_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_huawei_dorado_system_cache_expire$"
            description = "The amount of time after which the credential cache expires, in minutes. Default: 15"
        }
        "--critical" = {
            value = "$linuxfabrik_huawei_dorado_system_critical$"
            description = "Set the CRIT threshold as a percentage. Default: >= 95"
        }
        "--device-id" = {
            value = "$linuxfabrik_huawei_dorado_system_device_id$"
            description = "Huawei OceanStor Dorado API Device ID."
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_huawei_dorado_system_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_huawei_dorado_system_password$"
            description = "Huawei OceanStor Dorado API Password."
        }
        "--scope" = {
            value = "$linuxfabrik_huawei_dorado_system_scope$"
            description = "Huawei OceanStor Dorado API Scope."
        }
        "--test" = {
            value = "$linuxfabrik_huawei_dorado_system_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_huawei_dorado_system_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_huawei_dorado_system_url$"
            description = "Huawei OceanStor Dorado API URL."
        }
        "--username" = {
            value = "$linuxfabrik_huawei_dorado_system_username$"
            description = "Huawei OceanStor Dorado API Username."
        }
        "--warning" = {
            value = "$linuxfabrik_huawei_dorado_system_warning$"
            description = "Set the WARN threshold as a percentage. Default: >= 90"
        }
    }
}


/*
Commands and services for 'infomaniak-events' check from LinuxFabrik Monitoring Plugin:

Informs you about open events at Infomaniak.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/infomaniak-events
*/

object CheckCommand "_win_linuxfabrik_infomaniak_events" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\infomaniak-events.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_infomaniak_events_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_infomaniak_events_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_infomaniak_events_always_ok$"
            description = "Always returns OK."
        }
        "--token" = {
            value = "$linuxfabrik_infomaniak_events_token$"
            description = "Infomaniak API token"
        }
        "--test" = {
            value = "$linuxfabrik_infomaniak_events_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to-stderr- file,expected-retc'."
        }
    }
}


/*
Commands and services for 'infomaniak-swiss-backup-devices' check from LinuxFabrik Monitoring Plugin:

Infomaniak API.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/infomaniak-swiss-backup-devices
*/

object CheckCommand "_win_linuxfabrik_infomaniak_swiss_backup_devices" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\infomaniak-swiss-backup-devices.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_infomaniak_swiss_backup_devices_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_infomaniak_swiss_backup_devices_version$"
            description = "show program's version number and exit"
        }
        "--account-id" = {
            value = "$linuxfabrik_infomaniak_swiss_backup_devices_account_id$"
            description = "Infomaniak Account-ID"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_infomaniak_swiss_backup_devices_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_infomaniak_swiss_backup_devices_critical$"
            description = "Set the CRIT threshold as a percentage. Default: >= 95"
        }
        "--severity" = {
            value = "$linuxfabrik_infomaniak_swiss_backup_devices_severity$"
            description = "Severity for alerting other values. Default: warn"
        }
        "--token" = {
            value = "$linuxfabrik_infomaniak_swiss_backup_devices_token$"
            description = "Infomaniak API token"
        }
        "--test" = {
            value = "$linuxfabrik_infomaniak_swiss_backup_devices_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--warning" = {
            value = "$linuxfabrik_infomaniak_swiss_backup_devices_warning$"
            description = "Set the WARN threshold as a percentage. Default: >= 90"
        }
    }
}


/*
Commands and services for 'infomaniak-swiss-backup-products' check from LinuxFabrik Monitoring Plugin:

Checks your Infomaniak Swiss Backup product details via the Infomaniak API.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/infomaniak-swiss-backup-products
*/

object CheckCommand "_win_linuxfabrik_infomaniak_swiss_backup_products" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\infomaniak-swiss-backup-products.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_infomaniak_swiss_backup_products_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_infomaniak_swiss_backup_products_version$"
            description = "show program's version number and exit"
        }
        "--account-id" = {
            value = "$linuxfabrik_infomaniak_swiss_backup_products_account_id$"
            description = "Infomaniak Account-ID"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_infomaniak_swiss_backup_products_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_infomaniak_swiss_backup_products_critical$"
            description = "Set the critical for the expiration date in days. Default: 5"
        }
        "--severity" = {
            value = "$linuxfabrik_infomaniak_swiss_backup_products_severity$"
            description = "Severity for alerting other values. Default: warn"
        }
        "--token" = {
            value = "$linuxfabrik_infomaniak_swiss_backup_products_token$"
            description = "Infomaniak API token"
        }
        "--test" = {
            value = "$linuxfabrik_infomaniak_swiss_backup_products_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--warning" = {
            value = "$linuxfabrik_infomaniak_swiss_backup_products_warning$"
            description = "Set the warning for the expiration date in days. Default: 14"
        }
    }
}


/*
Commands and services for 'jitsi-videobridge-stats' check from LinuxFabrik Monitoring Plugin:

of performance data.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/jitsi-videobridge-stats
*/

object CheckCommand "_win_linuxfabrik_jitsi_videobridge_stats" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\jitsi-videobridge-stats.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_jitsi_videobridge_stats_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_jitsi_videobridge_stats_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_jitsi_videobridge_stats_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_jitsi_videobridge_stats_critical$"
            description = "Set the CRIT threshold for the number of participants. Default: >= 100"
        }
        "--password" = {
            value = "$linuxfabrik_jitsi_videobridge_stats_password$"
            description = "Jitsi API password."
        }
        "--test" = {
            value = "$linuxfabrik_jitsi_videobridge_stats_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_jitsi_videobridge_stats_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_jitsi_videobridge_stats_url$"
            description = "Jitsi API URL. Default: http://localhost:8080"
        }
        "--username" = {
            value = "$linuxfabrik_jitsi_videobridge_stats_username$"
            description = "Jitsi API username. Default: None"
        }
        "--warning" = {
            value = "$linuxfabrik_jitsi_videobridge_stats_warning$"
            description = "Set the WARN threshold for the number of participants. Default: >= 25"
        }
    }
}


/*
Commands and services for 'jitsi-videobridge-status' check from LinuxFabrik Monitoring Plugin:

Checks the Jitsi Videobridge health state.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/jitsi-videobridge-status
*/

object CheckCommand "_win_linuxfabrik_jitsi_videobridge_status" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\jitsi-videobridge-status.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_jitsi_videobridge_status_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_jitsi_videobridge_status_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_jitsi_videobridge_status_always_ok$"
            description = "Always returns OK."
        }
        "--password" = {
            value = "$linuxfabrik_jitsi_videobridge_status_password$"
            description = "Jitsi API password."
        }
        "--severity" = {
            value = "$linuxfabrik_jitsi_videobridge_status_severity$"
            description = "Severity for alerting. One of 'warn' or 'crit'. Default: warn"
        }
        "--test" = {
            value = "$linuxfabrik_jitsi_videobridge_status_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_jitsi_videobridge_status_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_jitsi_videobridge_status_url$"
            description = "Jitsi API URL. Default: http://localhost:8080"
        }
        "--username" = {
            value = "$linuxfabrik_jitsi_videobridge_status_username$"
            description = "Jitsi API username. Default: None"
        }
    }
}


/*
Commands and services for 'json-values' check from LinuxFabrik Monitoring Plugin:

message, state and perfdata from the json.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/json-values
*/

object CheckCommand "_win_linuxfabrik_json_values" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\json-values.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_json_values_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_json_values_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_json_values_always_ok$"
            description = "Always returns OK."
        }
        "--filename" = {
            value = "$linuxfabrik_json_values_filename$"
            description = "Set the url of the json file. This is mutually exclusive with -u / --url."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_json_values_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--message-key" = {
            value = "$linuxfabrik_json_values_message_key$"
            description = "Name of the json array key containing the output message. Default: message"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_json_values_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_json_values_password$"
            description = "SMB Password."
        }
        "--perfdata-key" = {
            value = "$linuxfabrik_json_values_perfdata_key$"
            description = "Name of the json array key containing the perfdata. Default: perfdata"
        }
        "--state-key" = {
            value = "$linuxfabrik_json_values_state_key$"
            description = "Name of the json array key containing the state. Default: state"
        }
        "--timeout" = {
            value = "$linuxfabrik_json_values_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_json_values_url$"
            description = "Set the url of the json file, either starting with 'http://', 'https://' or 'smb://'. This is mutually exclusive with --filename."
        }
        "--username" = {
            value = "$linuxfabrik_json_values_username$"
            description = "SMB Username."
        }
    }
}


/*
Commands and services for 'kemp-services' check from LinuxFabrik Monitoring Plugin:

Warns if virtual services provided by a kemp loadbalancer appliance are down.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/kemp-services
*/

object CheckCommand "_win_linuxfabrik_kemp_services" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\kemp-services.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_kemp_services_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_kemp_services_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_kemp_services_always_ok$"
            description = "Always returns OK."
        }
        "--filter" = {
            value = "$linuxfabrik_kemp_services_filter$"
            description = "Only check services that contain this string in their NickName."
        }
        "--hostname" = {
            value = "$linuxfabrik_kemp_services_hostname$"
            description = "KEMP Appliance address."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_kemp_services_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_kemp_services_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_kemp_services_password$"
            description = "API Password."
        }
        "--port" = {
            value = "$linuxfabrik_kemp_services_port$"
            description = "KEMP Appliance port."
        }
        "--severity" = {
            value = "$linuxfabrik_kemp_services_severity$"
            description = "Severity for alerting. Default: warn"
        }
        "--test" = {
            value = "$linuxfabrik_kemp_services_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_kemp_services_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--username" = {
            value = "$linuxfabrik_kemp_services_username$"
            description = "API Username."
        }
    }
}


/*
Commands and services for 'librenms-alerts' check from LinuxFabrik Monitoring Plugin:

API.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/librenms-alerts
*/

object CheckCommand "_win_linuxfabrik_librenms_alerts" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\librenms-alerts.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_librenms_alerts_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_librenms_alerts_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_librenms_alerts_always_ok$"
            description = "Always returns OK."
        }
        "--device-group" = {
            value = "$linuxfabrik_librenms_alerts_device_group$"
            description = "Filter by LibreNMS Device Group."
        }
        "--device-hostname" = {
            value = "$linuxfabrik_librenms_alerts_device_hostname$"
            description = "Filter by LibreNMS Hostname (repeating)."
            repeat_key = true
        }
        "--device-type" = {
            value = "$linuxfabrik_librenms_alerts_device_type$"
            description = "Filter by LibreNMS Device Type (repeating)."
            repeat_key = true
        }
        "--insecure" = {
            set_if = "$linuxfabrik_librenms_alerts_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--lengthy" = {
            set_if = "$linuxfabrik_librenms_alerts_lengthy$"
            description = "Extended reporting."
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_librenms_alerts_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--timeout" = {
            value = "$linuxfabrik_librenms_alerts_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--token" = {
            value = "$linuxfabrik_librenms_alerts_token$"
            description = "LibreNMS API token"
        }
        "--url" = {
            value = "$linuxfabrik_librenms_alerts_url$"
            description = "LibreNMS API URL. Default: http://localhost"
        }
    }
}


/*
Commands and services for 'librenms-health' check from LinuxFabrik Monitoring Plugin:

This check fetches sensor information from a LibreNMS instance, using its API.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/librenms-health
*/

object CheckCommand "_win_linuxfabrik_librenms_health" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\librenms-health.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_librenms_health_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_librenms_health_version$"
            description = "show program's version number and exit"
        }
        "--device-group" = {
            value = "$linuxfabrik_librenms_health_device_group$"
            description = "Filter by LibreNMS Device Group."
        }
        "--device-hostname" = {
            value = "$linuxfabrik_librenms_health_device_hostname$"
            description = "Filter by LibreNMS Hostname (repeating)."
            repeat_key = true
        }
        "--device-type" = {
            value = "$linuxfabrik_librenms_health_device_type$"
            description = "Filter by LibreNMS Device Type (repeating)."
            repeat_key = true
        }
        "--insecure" = {
            set_if = "$linuxfabrik_librenms_health_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--lengthy" = {
            set_if = "$linuxfabrik_librenms_health_lengthy$"
            description = "Extended reporting."
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_librenms_health_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--timeout" = {
            value = "$linuxfabrik_librenms_health_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--token" = {
            value = "$linuxfabrik_librenms_health_token$"
            description = "LibreNMS API token"
        }
        "--url" = {
            value = "$linuxfabrik_librenms_health_url$"
            description = "LibreNMS API URL. Default: http://localhost"
        }
    }
}


/*
Commands and services for 'librenms-version' check from LinuxFabrik Monitoring Plugin:

This check displays LibreNMS instance information, using its API.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/librenms-version
*/

object CheckCommand "_win_linuxfabrik_librenms_version" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\librenms-version.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_librenms_version_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_librenms_version_version$"
            description = "show program's version number and exit"
        }
        "--insecure" = {
            set_if = "$linuxfabrik_librenms_version_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_librenms_version_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--timeout" = {
            value = "$linuxfabrik_librenms_version_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--token" = {
            value = "$linuxfabrik_librenms_version_token$"
            description = "LibreNMS API token"
        }
        "--url" = {
            value = "$linuxfabrik_librenms_version_url$"
            description = "LibreNMS API URL. Default: http://localhost"
        }
    }
}


/*
Commands and services for 'logfile' check from LinuxFabrik Monitoring Plugin:

findings.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/logfile
*/

object CheckCommand "_win_linuxfabrik_logfile" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\logfile.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_logfile_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_logfile_version$"
            description = "show program's version number and exit"
        }
        "--alarm-duration" = {
            value = "$linuxfabrik_logfile_alarm_duration$"
            description = "How long should this check return an alarm on new matches (in minutes)? This is overwritten by --icinga- callback. Default: 60"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_logfile_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_logfile_critical$"
            description = "Set the critical threshold for the number of found critical matches. Default: 1"
        }
        "--critical-pattern" = {
            value = "$linuxfabrik_logfile_critical_pattern$"
            description = "Any line containing this pattern will count as a critical."
        }
        "--critical-regex" = {
            value = "$linuxfabrik_logfile_critical_regex$"
            description = "Any line matching this python regex will count as a critical."
        }
        "--filename" = {
            value = "$linuxfabrik_logfile_filename$"
            description = "Set the path of the logfile."
        }
        "--icinga-callback" = {
            set_if = "$linuxfabrik_logfile_icinga_callback$"
            description = "Get the service acknowledgement from Icinga. This overwrites --alarm-duration. Default: False"
        }
        "--icinga-password" = {
            value = "$linuxfabrik_logfile_icinga_password$"
            description = "Icinga API password."
        }
        "--icinga-service-name" = {
            value = "$linuxfabrik_logfile_icinga_service_name$"
            description = "Unique name of the service using this check within Icinga. Take it from the `__name` service attribute, for example `icinga-server!my-service-name`."
        }
        "--icinga-url" = {
            value = "$linuxfabrik_logfile_icinga_url$"
            description = "Icinga API URL, for example https://icinga- server:5665."
        }
        "--icinga-username" = {
            value = "$linuxfabrik_logfile_icinga_username$"
            description = "Icinga API username."
        }
        "--ignore-pattern" = {
            value = "$linuxfabrik_logfile_ignore_pattern$"
            description = "Any line containing this pattern will be ignored."
        }
        "--ignore-regex" = {
            value = "$linuxfabrik_logfile_ignore_regex$"
            description = "Any line matching this python regex will be ignored."
        }
        "--suppress-lines" = {
            set_if = "$linuxfabrik_logfile_suppress_lines$"
            description = "Suppress the found lines in the output, only report the number of findings."
        }
        "--warning" = {
            value = "$linuxfabrik_logfile_warning$"
            description = "Set the warning threshold for the number of found warning matches. Default: 1"
        }
        "--warning-pattern" = {
            value = "$linuxfabrik_logfile_warning_pattern$"
            description = "Any line containing this pattern will count as a warning."
        }
        "--warning-regex" = {
            value = "$linuxfabrik_logfile_warning_regex$"
            description = "Any line matching this python regex will count as a warning."
        }
    }
}


/*
Commands and services for 'matomo-reporting' check from LinuxFabrik Monitoring Plugin:

one or several websites and for any given date and period.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/matomo-reporting
*/

object CheckCommand "_win_linuxfabrik_matomo_reporting" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\matomo-reporting.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_matomo_reporting_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_matomo_reporting_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_matomo_reporting_always_ok$"
            description = "Always returns OK."
        }
        "--date" = {
            value = "$linuxfabrik_matomo_reporting_date$"
            description = "REST API date, for example 'date=last10' or 'date='today'. Default: today"
        }
        "--idsite" = {
            value = "$linuxfabrik_matomo_reporting_idsite$"
            description = "REST API idSite, for example 'idsite=1', 'idsite=1,4,5' or 'idsite=all'. Default: 1"
        }
        "--insecure" = {
            set_if = "$linuxfabrik_matomo_reporting_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--metric" = {
            value = "$linuxfabrik_matomo_reporting_metric$"
            description = "Filter the output and optionally check against thresholds or ranges, for example '--metric nb_visits,100:,50:' (repeating, csv, works with ranges). Default: []"
            repeat_key = true
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_matomo_reporting_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_matomo_reporting_password$"
            description = "REST API Access Token. Default: anonymous"
        }
        "--period" = {
            value = "$linuxfabrik_matomo_reporting_period$"
            description = "REST API period, for example 'period=range' or 'period=day'. Default: day"
        }
        "--timeout" = {
            value = "$linuxfabrik_matomo_reporting_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_matomo_reporting_url$"
            description = "Matomo URL. Default: https://demo.matomo.org"
        }
    }
}


/*
Commands and services for 'matomo-version' check from LinuxFabrik Monitoring Plugin:

This plugin lets you track if server updates are available.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/matomo-version
*/

object CheckCommand "_win_linuxfabrik_matomo_version" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\matomo-version.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_matomo_version_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_matomo_version_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_matomo_version_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_matomo_version_cache_expire$"
            description = "The amount of time after which the update check cache expires, in hours. Default: 24"
        }
        "--path" = {
            value = "$linuxfabrik_matomo_version_path$"
            description = "Local path to your Matomo/Piwik installation, typically within your Webserver's Document Root. Default: /var/www/html/matomo"
        }
    }
}


/*
Commands and services for 'memory-usage' check from LinuxFabrik Monitoring Plugin:

Displays amount of free and used memory in the system, checks against used memory in percent.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/memory-usage
*/

object CheckCommand "_win_linuxfabrik_memory_usage" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\memory-usage.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_memory_usage_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_memory_usage_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_memory_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_memory_usage_critical$"
            description = "Set the critical threshold for memory usage (in percent). Default: 95"
        }
        "--warning" = {
            value = "$linuxfabrik_memory_usage_warning$"
            description = "Set the warning threshold for memory usage (in percent). Default: 90"
        }
    }
}


/*
Commands and services for 'metabase-stats' check from LinuxFabrik Monitoring Plugin:

This check gets some recent activity from Metabase.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/metabase-stats
*/

object CheckCommand "_win_linuxfabrik_metabase_stats" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\metabase-stats.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_metabase_stats_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_metabase_stats_version$"
            description = "show program's version number and exit"
        }
        "--cache-expire" = {
            value = "$linuxfabrik_metabase_stats_cache_expire$"
            description = "The amount of time after which the credential cache expires, in hours. Default: 335"
        }
        "--critical" = {
            value = "$linuxfabrik_metabase_stats_critical$"
            description = "Set the CRIT threshold as a percentage. Default: >= 90"
        }
        "--password" = {
            value = "$linuxfabrik_metabase_stats_password$"
            description = "Metabase API password."
        }
        "--url" = {
            value = "$linuxfabrik_metabase_stats_url$"
            description = "Metabase API URL. Default: http://localhost:3000"
        }
        "--username" = {
            value = "$linuxfabrik_metabase_stats_username$"
            description = "Metabase API username. Default: metabase-admin"
        }
        "--warning" = {
            value = "$linuxfabrik_metabase_stats_warning$"
            description = "Set the WARN threshold as a percentage. Default: >= 80"
        }
    }
}


/*
Commands and services for 'mod-qos-stats' check from LinuxFabrik Monitoring Plugin:

information.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mod-qos-stats
*/

object CheckCommand "_win_linuxfabrik_mod_qos_stats" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mod-qos-stats.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mod_qos_stats_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mod_qos_stats_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mod_qos_stats_always_ok$"
            description = "Always returns OK."
        }
        "--test" = {
            value = "$linuxfabrik_mod_qos_stats_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--url" = {
            value = "$linuxfabrik_mod_qos_stats_url$"
            description = "mod_qos Status URL. Default: http://localhost/qos-status"
        }
    }
}


/*
Commands and services for 'mysql-aria' check from LinuxFabrik Monitoring Plugin:

Checks some metrics of the Aria Storage Engine in MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-aria
*/

object CheckCommand "_win_linuxfabrik_mysql_aria" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-aria.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_aria_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_aria_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_aria_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_aria_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_aria_password$"
            description = "Use the indicated password to authenticate the connection."
        }
        "--port" = {
            value = "$linuxfabrik_mysql_aria_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_aria_username$"
            description = "MySQL/MariaDB username."
        }
    }
}


/*
Commands and services for 'mysql-binlog-cache' check from LinuxFabrik Monitoring Plugin:

they could not fit in the regular binary log cache in MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-binlog-cache
*/

object CheckCommand "_win_linuxfabrik_mysql_binlog_cache" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-binlog-cache.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_binlog_cache_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_binlog_cache_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_binlog_cache_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_binlog_cache_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_binlog_cache_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_binlog_cache_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_binlog_cache_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-connections' check from LinuxFabrik Monitoring Plugin:

resolution is active for new connections on MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-connections
*/

object CheckCommand "_win_linuxfabrik_mysql_connections" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-connections.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_connections_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_connections_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_connections_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_connections_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--ignore-name-resolution" = {
            set_if = "$linuxfabrik_mysql_connections_ignore_name_resolution$"
            description = "Do not check if name resolution is active. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_connections_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_connections_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--timeout" = {
            value = "$linuxfabrik_mysql_connections_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_connections_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-database-metrics' check from LinuxFabrik Monitoring Plugin:

schemas.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-database-metrics
*/

object CheckCommand "_win_linuxfabrik_mysql_database_metrics" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-database-metrics.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_database_metrics_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_database_metrics_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_database_metrics_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_database_metrics_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_database_metrics_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_database_metrics_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--timeout" = {
            value = "$linuxfabrik_mysql_database_metrics_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_database_metrics_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-innodb-buffer-pool-instances' check from LinuxFabrik Monitoring Plugin:

Checks the InnoDB buffer pool instance configuration in MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-innodb-buffer-pool-instances
*/

object CheckCommand "_win_linuxfabrik_mysql_innodb_buffer_pool_instances" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-innodb-buffer-pool-instances.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_innodb_buffer_pool_instances_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_innodb_buffer_pool_instances_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_innodb_buffer_pool_instances_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_innodb_buffer_pool_instances_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_innodb_buffer_pool_instances_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_innodb_buffer_pool_instances_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_innodb_buffer_pool_instances_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-innodb-buffer-pool-size' check from LinuxFabrik Monitoring Plugin:

Checks the size of the InnoDB buffer pool in MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-innodb-buffer-pool-size
*/

object CheckCommand "_win_linuxfabrik_mysql_innodb_buffer_pool_size" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-innodb-buffer-pool-size.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_innodb_buffer_pool_size_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_innodb_buffer_pool_size_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_innodb_buffer_pool_size_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_innodb_buffer_pool_size_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_innodb_buffer_pool_size_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_innodb_buffer_pool_size_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_innodb_buffer_pool_size_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-innodb-log-waits' check from LinuxFabrik Monitoring Plugin:

flushed due to the log buffer being too small in MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-innodb-log-waits
*/

object CheckCommand "_win_linuxfabrik_mysql_innodb_log_waits" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-innodb-log-waits.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_innodb_log_waits_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_innodb_log_waits_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_innodb_log_waits_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_innodb_log_waits_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_innodb_log_waits_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_innodb_log_waits_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_innodb_log_waits_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-joins' check from LinuxFabrik Monitoring Plugin:

Checks if many joins per day without indexes were executed on MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-joins
*/

object CheckCommand "_win_linuxfabrik_mysql_joins" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-joins.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_joins_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_joins_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_joins_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_joins_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_joins_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_joins_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_joins_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-logfile' check from LinuxFabrik Monitoring Plugin:

case the DB is down.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-logfile
*/

object CheckCommand "_win_linuxfabrik_mysql_logfile" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-logfile.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_logfile_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_logfile_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_logfile_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_mysql_logfile_cache_expire$"
            description = "The amount of time after which the cached data expires, in minutes. Default: 7200"
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_logfile_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--ignore-pattern" = {
            value = "$linuxfabrik_mysql_logfile_ignore_pattern$"
            description = "Any line containing this pattern will be ignored (must be lowercase; repeating)."
            repeat_key = true
        }
        "--ignore-regex" = {
            value = "$linuxfabrik_mysql_logfile_ignore_regex$"
            description = "Any line matching this python regex will be ignored."
        }
        "--password" = {
            value = "$linuxfabrik_mysql_logfile_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_logfile_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--server-log" = {
            value = "$linuxfabrik_mysql_logfile_server_log$"
            description = "One of: Path to error log file (including filename); docker:CONTAINER; podman:CONTAINER; kubectl:CONTAINER; systemd:UNITNAME. If ommitted, this check tries to fetch the logfile location automatically."
        }
        "--username" = {
            value = "$linuxfabrik_mysql_logfile_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-memory' check from LinuxFabrik Monitoring Plugin:

Checks memory metrics for MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-memory
*/

object CheckCommand "_win_linuxfabrik_mysql_memory" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-memory.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_memory_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_memory_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_memory_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_memory_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_memory_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_memory_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_memory_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-open-files' check from LinuxFabrik Monitoring Plugin:

Checks the open file usage in MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-open-files
*/

object CheckCommand "_win_linuxfabrik_mysql_open_files" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-open-files.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_open_files_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_open_files_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_open_files_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_open_files_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_open_files_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_open_files_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_open_files_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-perf-metrics' check from LinuxFabrik Monitoring Plugin:

MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-perf-metrics
*/

object CheckCommand "_win_linuxfabrik_mysql_perf_metrics" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-perf-metrics.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_perf_metrics_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_perf_metrics_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_perf_metrics_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_perf_metrics_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_perf_metrics_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_perf_metrics_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_perf_metrics_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-replica-status' check from LinuxFabrik Monitoring Plugin:

Checks the replication status of MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-replica-status
*/

object CheckCommand "_win_linuxfabrik_mysql_replica_status" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-replica-status.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_replica_status_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_replica_status_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_replica_status_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_replica_status_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_replica_status_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_replica_status_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--severity" = {
            value = "$linuxfabrik_mysql_replica_status_severity$"
            description = "Severity for alerts that do not depend on thresholds. One of 'warn' or 'crit'. Default: warn"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_replica_status_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-slow-queries' check from LinuxFabrik Monitoring Plugin:

time to perform on MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-slow-queries
*/

object CheckCommand "_win_linuxfabrik_mysql_slow_queries" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-slow-queries.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_slow_queries_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_slow_queries_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_slow_queries_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_slow_queries_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_slow_queries_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_slow_queries_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_slow_queries_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-sorts' check from LinuxFabrik Monitoring Plugin:

Checks some sort metrics on MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-sorts
*/

object CheckCommand "_win_linuxfabrik_mysql_sorts" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-sorts.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_sorts_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_sorts_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_sorts_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_sorts_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_sorts_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_sorts_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_sorts_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-storage-engines' check from LinuxFabrik Monitoring Plugin:

MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-storage-engines
*/

object CheckCommand "_win_linuxfabrik_mysql_storage_engines" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-storage-engines.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_storage_engines_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_storage_engines_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_storage_engines_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_storage_engines_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_storage_engines_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_storage_engines_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--timeout" = {
            value = "$linuxfabrik_mysql_storage_engines_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_storage_engines_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-system' check from LinuxFabrik Monitoring Plugin:

Checks system requirements and kernel settings specifically for MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-system
*/

object CheckCommand "_win_linuxfabrik_mysql_system" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-system.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_system_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_system_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_system_always_ok$"
            description = "Always returns OK."
        }
        "--maxportsallowed" = {
            value = "$linuxfabrik_mysql_system_maxportsallowed$"
            description = "Number of ports opened allowed on this host. Default: 0 (check disabled)"
        }
    }
}


/*
Commands and services for 'mysql-table-cache' check from LinuxFabrik Monitoring Plugin:

Checks the hit rate for open tables cache lookups in MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-table-cache
*/

object CheckCommand "_win_linuxfabrik_mysql_table_cache" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-table-cache.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_table_cache_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_table_cache_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_table_cache_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_table_cache_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_table_cache_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_table_cache_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_table_cache_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-table-definition-cache' check from LinuxFabrik Monitoring Plugin:

Checks the size of the table definition cache in MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-table-definition-cache
*/

object CheckCommand "_win_linuxfabrik_mysql_table_definition_cache" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-table-definition-cache.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_table_definition_cache_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_table_definition_cache_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_table_definition_cache_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_table_definition_cache_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_table_definition_cache_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_table_definition_cache_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_table_definition_cache_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-table-indexes' check from LinuxFabrik Monitoring Plugin:

Checks for missing indexes in MySQL/MariaDB tables.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-table-indexes
*/

object CheckCommand "_win_linuxfabrik_mysql_table_indexes" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-table-indexes.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_table_indexes_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_table_indexes_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_table_indexes_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_table_indexes_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_table_indexes_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_table_indexes_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_table_indexes_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-table-locks' check from LinuxFabrik Monitoring Plugin:

MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-table-locks
*/

object CheckCommand "_win_linuxfabrik_mysql_table_locks" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-table-locks.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_table_locks_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_table_locks_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_table_locks_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_table_locks_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_table_locks_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_table_locks_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_table_locks_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-temp-tables' check from LinuxFabrik Monitoring Plugin:

MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-temp-tables
*/

object CheckCommand "_win_linuxfabrik_mysql_temp_tables" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-temp-tables.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_temp_tables_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_temp_tables_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_temp_tables_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_temp_tables_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_temp_tables_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_temp_tables_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_temp_tables_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-thread-cache' check from LinuxFabrik Monitoring Plugin:

Checks the number of threads MySQL/MariaDB caches for re-use.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-thread-cache
*/

object CheckCommand "_win_linuxfabrik_mysql_thread_cache" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-thread-cache.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_thread_cache_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_thread_cache_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_thread_cache_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_thread_cache_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_thread_cache_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_thread_cache_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_thread_cache_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-traffic' check from LinuxFabrik Monitoring Plugin:

MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-traffic
*/

object CheckCommand "_win_linuxfabrik_mysql_traffic" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-traffic.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_traffic_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_traffic_version$"
            description = "show program's version number and exit"
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_traffic_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_traffic_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_traffic_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_traffic_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'mysql-user-security' check from LinuxFabrik Monitoring Plugin:

Check user's security in MySQL/MariaDB.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/mysql-user-security
*/

object CheckCommand "_win_linuxfabrik_mysql_user_security" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\mysql-user-security.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_mysql_user_security_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_mysql_user_security_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_mysql_user_security_always_ok$"
            description = "Always returns OK."
        }
        "--hostname" = {
            value = "$linuxfabrik_mysql_user_security_hostname$"
            description = "MySQL/MariaDB hostname. Default: 127.0.0.1"
        }
        "--password" = {
            value = "$linuxfabrik_mysql_user_security_password$"
            description = "Use the indicated password to authenticate the connection. Default:"
        }
        "--port" = {
            value = "$linuxfabrik_mysql_user_security_port$"
            description = "MySQL/MariaDB port. Default: 3306"
        }
        "--severity" = {
            value = "$linuxfabrik_mysql_user_security_severity$"
            description = "Severity for alerts that do not depend on thresholds. One of 'warn' or 'crit'. Default: warn"
        }
        "--username" = {
            value = "$linuxfabrik_mysql_user_security_username$"
            description = "MySQL/MariaDB username. Default: root"
        }
    }
}


/*
Commands and services for 'network-connections' check from LinuxFabrik Monitoring Plugin:

processing those connections.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/network-connections
*/

object CheckCommand "_win_linuxfabrik_network_connections" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\network-connections.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_network_connections_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_network_connections_version$"
            description = "show program's version number and exit"
        }
        "--conn-status" = {
            value = "$linuxfabrik_network_connections_conn_status$"
            description = "1,fin_wait2,last_ack,listen,none,syn_recv,syn_sent,time_wait} Filter the status of the connections (repeating). Default: None"
            repeat_key = true
        }
        "--conn-type" = {
            value = "$linuxfabrik_network_connections_conn_type$"
            description = "6,udp,udp6,unix} Filter the family/type of the connections (repeating). Default: None"
            repeat_key = true
        }
        "--critical" = {
            value = "$linuxfabrik_network_connections_critical$"
            description = "Threshold for the number of connections. Type: None or Range. Default: None"
        }
        "--warning" = {
            value = "$linuxfabrik_network_connections_warning$"
            description = "Threshold for the number of connections. Type: None or Range. Default: None"
        }
    }
}


/*
Commands and services for 'network-io' check from LinuxFabrik Monitoring Plugin:

Checks network IO.

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/network-io
*/

object CheckCommand "_win_linuxfabrik_network_io" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\network-io.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_network_io_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_network_io_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_network_io_always_ok$"
            description = "Always returns OK."
        }
        "--count" = {
            value = "$linuxfabrik_network_io_count$"
            description = "Number of times the value has to be above the given thresholds. Default: 5"
        }
        "--critical" = {
            value = "$linuxfabrik_network_connections_critical$"
            description = "Threshold for the number of connections. Type: None or Range. Default: None"
        }
        "--ignore" = {
            value = "$linuxfabrik_network_io_ignore$"
            description = "Ignore network interfaces starting with a string like 'tun' (repeating). Default: ['lo']"
            repeat_key = true
        }
        "--warning" = {
            value = "$linuxfabrik_network_io_warning$"
            description = "Threshold for the number of connections. Type: None or Range. Default: None"
        }
    }
}


/*
Commands and services for 'network-port-tcp' check from LinuxFabrik Monitoring Plugin:

Checks whether a network port is reachable.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/network-port-tcp
*/

object CheckCommand "_win_linuxfabrik_network_port_tcp" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\network-port-tcp.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_network_port_tcp_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_network_port_tcp_version$"
            description = "show program's version number and exit"
        }
        "--hostname" = {
            value = "$linuxfabrik_network_port_tcp_hostname$"
            description = "The host or ip address to check. Default: localhost"
        }
        "--port" = {
            value = "$linuxfabrik_network_port_tcp_port$"
            description = "The port number. Default: 22"
        }
        "--portname" = {
            value = "$linuxfabrik_network_port_tcp_portname$"
            description = "The display name of the port."
        }
        "--state" = {
            value = "$linuxfabrik_network_port_tcp_state$"
            description = "The state that has to be returned. Default: warn"
        }
        "--timeout" = {
            value = "$linuxfabrik_network_port_tcp_timeout$"
            description = "Network timeout. Default: 2"
        }
        "--type" = {
            value = "$linuxfabrik_network_port_tcp_type$"
            description = "6}     Connection type. Default: tcp"
        }
    }
}


/*
Commands and services for 'nextcloud-security-scan' check from LinuxFabrik Monitoring Plugin:

Checks the security of your private Nextcloud server.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/nextcloud-security-scan
*/

object CheckCommand "_win_linuxfabrik_nextcloud_security_scan" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\nextcloud-security-scan.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_nextcloud_security_scan_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_nextcloud_security_scan_version$"
            description = "show program's version number and exit"
        }
        "--timeout" = {
            value = "$linuxfabrik_nextcloud_security_scan_timeout$"
            description = "Network timeout in seconds. Default: 7 (seconds)"
        }
        "--trigger" = {
            value = "$linuxfabrik_nextcloud_security_scan_trigger$"
            description = "Trigger re-scan of the Nextcloud server if result on scan.nextcloud.com is older than n days. Default: 14 (days)"
        }
        "--url" = {
            value = "$linuxfabrik_nextcloud_security_scan_url$"
            description = "Nextcloud API URL, for example 'cloud.linuxfabrik.io'."
        }
    }
}


/*
Commands and services for 'nextcloud-stats' check from LinuxFabrik Monitoring Plugin:

server.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/nextcloud-stats
*/

object CheckCommand "_win_linuxfabrik_nextcloud_stats" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\nextcloud-stats.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_nextcloud_stats_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_nextcloud_stats_version$"
            description = "show program's version number and exit"
        }
        "--insecure" = {
            set_if = "$linuxfabrik_nextcloud_stats_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_nextcloud_stats_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_nextcloud_stats_password$"
            description = "Nextcloud API password."
        }
        "--url" = {
            value = "$linuxfabrik_nextcloud_stats_url$"
            description = "Nextcloud API URL. Default: http://localhost/nextcloud/ocs/v2.php/apps/serverinfo/api/v1/info"
        }
        "--username" = {
            value = "$linuxfabrik_nextcloud_stats_username$"
            description = "Nextcloud API username. Default: admin"
        }
    }
}


/*
Commands and services for 'nextcloud-version' check from LinuxFabrik Monitoring Plugin:

This plugin lets you track if Nextcloud server updates are available.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/nextcloud-version
*/

object CheckCommand "_win_linuxfabrik_nextcloud_version" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\nextcloud-version.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_nextcloud_version_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_nextcloud_version_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_nextcloud_version_always_ok$"
            description = "Always returns OK."
        }
        "--path" = {
            value = "$linuxfabrik_nextcloud_version_path$"
            description = "Local path to your Nextcloud installation, typically within your Webserver's Document Root. Default: /var/www/html/nextcloud"
        }
    }
}


/*
Commands and services for 'nginx-status' check from LinuxFabrik Monitoring Plugin:

This check provides NGINX basic status information.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/nginx-status
*/

object CheckCommand "_win_linuxfabrik_nginx_status" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\nginx-status.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_nginx_status_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_nginx_status_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_nginx_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_nginx_status_critical$"
            description = "Set the CRIT threshold for the number of active connections. Default: >= 486"
        }
        "--url" = {
            value = "$linuxfabrik_nginx_status_url$"
            description = "NGINX Server Status URL. Default:http://localhost/server-status"
        }
        "--warning" = {
            value = "$linuxfabrik_nginx_status_warning$"
            description = "Set the WARN threshold for the number of active connections. Default: >= 460"
        }
        "--test" = {
            value = "$linuxfabrik_nginx_status_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
    }
}


/*
Commands and services for 'nodebb-cache' check from LinuxFabrik Monitoring Plugin:

Get NodeBB system cache info.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/nodebb-cache
*/

object CheckCommand "_win_linuxfabrik_nodebb_cache" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\nodebb-cache.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_nodebb_cache_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_nodebb_cache_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_nodebb_cache_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_nodebb_cache_critical$"
            description = "Set the CRIT threshold as a percentage. Default: >= 90"
        }
        "--insecure" = {
            set_if = "$linuxfabrik_nodebb_cache_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--severity" = {
            value = "$linuxfabrik_nodebb_cache_severity$"
            description = "Severity for alerts that do not depend on thresholds. One of 'warn' or 'crit'. Default: warn"
        }
        "--test" = {
            value = "$linuxfabrik_nodebb_cache_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_nodebb_cache_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--token" = {
            value = "$linuxfabrik_nodebb_cache_token$"
            description = "NodeBB API Bearer token."
        }
        "--url" = {
            value = "$linuxfabrik_nodebb_cache_url$"
            description = "NodeBB API URL. Default: http://localhost:4567/forum"
        }
        "--warning" = {
            value = "$linuxfabrik_nodebb_cache_warning$"
            description = "Set the WARN threshold as a percentage. Default: >= 80"
        }
    }
}


/*
Commands and services for 'nodebb-database' check from LinuxFabrik Monitoring Plugin:

Get NodeBB database information.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/nodebb-database
*/

object CheckCommand "_win_linuxfabrik_nodebb_database" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\nodebb-database.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_nodebb_database_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_nodebb_database_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_nodebb_database_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_nodebb_database_critical$"
            description = "Set the CRIT threshold as a percentage. Default: >= 95"
        }
        "--insecure" = {
            set_if = "$linuxfabrik_nodebb_database_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--severity" = {
            value = "$linuxfabrik_nodebb_database_severity$"
            description = "Severity for alerts that do not depend on thresholds. One of 'warn' or 'crit'. Default: warn"
        }
        "--test" = {
            value = "$linuxfabrik_nodebb_database_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_nodebb_database_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--token" = {
            value = "$linuxfabrik_nodebb_database_token$"
            description = "NodeBB API Bearer token."
        }
        "--url" = {
            value = "$linuxfabrik_nodebb_database_url$"
            description = "NodeBB API URL. Default: http://localhost:4567/forum"
        }
        "--warning" = {
            value = "$linuxfabrik_nodebb_database_warning$"
            description = "Set the WARN threshold as a percentage. Default: >= 90"
        }
    }
}


/*
Commands and services for 'nodebb-errors' check from LinuxFabrik Monitoring Plugin:

Get NodeBB server-side errors.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/nodebb-errors
*/

object CheckCommand "_win_linuxfabrik_nodebb_errors" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\nodebb-errors.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_nodebb_errors_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_nodebb_errors_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_nodebb_errors_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_nodebb_errors_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--severity" = {
            value = "$linuxfabrik_nodebb_errors_severity$"
            description = "Severity for alerts that do not depend on thresholds. One of 'warn' or 'crit'. Default: warn"
        }
        "--test" = {
            value = "$linuxfabrik_nodebb_errors_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_nodebb_errors_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--token" = {
            value = "$linuxfabrik_nodebb_errors_token$"
            description = "NodeBB API Bearer token."
        }
        "--url" = {
            value = "$linuxfabrik_nodebb_errors_url$"
            description = "NodeBB API URL. Default: http://localhost:4567/forum"
        }
    }
}


/*
Commands and services for 'nodebb-events' check from LinuxFabrik Monitoring Plugin:

Get NodeBB event log.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/nodebb-events
*/

object CheckCommand "_win_linuxfabrik_nodebb_events" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\nodebb-events.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_nodebb_events_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_nodebb_events_version$"
            description = "show program's version number and exit"
        }
        "--insecure" = {
            set_if = "$linuxfabrik_nodebb_events_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--test" = {
            value = "$linuxfabrik_nodebb_events_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_nodebb_events_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--token" = {
            value = "$linuxfabrik_nodebb_events_token$"
            description = "NodeBB API Bearer token."
        }
        "--url" = {
            value = "$linuxfabrik_nodebb_events_url$"
            description = "NodeBB API URL. Default: http://localhost:4567/forum"
        }
    }
}


/*
Commands and services for 'nodebb-groups' check from LinuxFabrik Monitoring Plugin:

Get NodeBB post settings.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/nodebb-groups
*/

object CheckCommand "_win_linuxfabrik_nodebb_groups" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\nodebb-groups.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_nodebb_groups_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_nodebb_groups_version$"
            description = "show program's version number and exit"
        }
        "--insecure" = {
            set_if = "$linuxfabrik_nodebb_groups_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--test" = {
            value = "$linuxfabrik_nodebb_groups_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_nodebb_groups_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--token" = {
            value = "$linuxfabrik_nodebb_groups_token$"
            description = "NodeBB API Bearer token."
        }
        "--url" = {
            value = "$linuxfabrik_nodebb_groups_url$"
            description = "NodeBB API URL. Default: http://localhost:4567/forum"
        }
    }
}


/*
Commands and services for 'nodebb-info' check from LinuxFabrik Monitoring Plugin:

Get NodeBB process/system information.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/nodebb-info
*/

object CheckCommand "_win_linuxfabrik_nodebb_info" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\nodebb-info.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_nodebb_info_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_nodebb_info_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_nodebb_info_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_nodebb_info_critical$"
            description = "Set the CRIT threshold as a percentage. Default: >= 95"
        }
        "--insecure" = {
            set_if = "$linuxfabrik_nodebb_info_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--test" = {
            value = "$linuxfabrik_nodebb_info_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_nodebb_info_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--token" = {
            value = "$linuxfabrik_nodebb_info_token$"
            description = "NodeBB API Bearer token."
        }
        "--url" = {
            value = "$linuxfabrik_nodebb_info_url$"
            description = "NodeBB API URL. Default: http://localhost:4567/forum"
        }
        "--warning" = {
            value = "$linuxfabrik_nodebb_info_warning$"
            description = "Set the WARN threshold as a percentage. Default: >= 90"
        }
    }
}


/*
Commands and services for 'nodebb-users' check from LinuxFabrik Monitoring Plugin:

Get NodeBB users.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/nodebb-users
*/

object CheckCommand "_win_linuxfabrik_nodebb_users" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\nodebb-users.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_nodebb_users_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_nodebb_users_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_nodebb_users_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_nodebb_users_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--severity" = {
            value = "$linuxfabrik_nodebb_users_severity$"
            description = "Severity for alerts that do not depend on thresholds. One of 'warn' or 'crit'. Default: warn"
        }
        "--test" = {
            value = "$linuxfabrik_nodebb_users_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_nodebb_users_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--token" = {
            value = "$linuxfabrik_nodebb_users_token$"
            description = "NodeBB API Bearer token."
        }
        "--url" = {
            value = "$linuxfabrik_nodebb_users_url$"
            description = "NodeBB API URL. Default: http://localhost:4567/forum"
        }
    }
}


/*
Commands and services for 'nodebb-version' check from LinuxFabrik Monitoring Plugin:

This plugin lets you track if a NodeBB update is available.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/nodebb-version
*/

object CheckCommand "_win_linuxfabrik_nodebb_version" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\nodebb-version.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_nodebb_version_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_nodebb_version_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_nodebb_version_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_nodebb_version_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--test" = {
            value = "$linuxfabrik_nodebb_version_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_nodebb_version_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--token" = {
            value = "$linuxfabrik_nodebb_version_token$"
            description = "NodeBB API Bearer token."
        }
        "--url" = {
            value = "$linuxfabrik_nodebb_version_url$"
            description = "NodeBB API URL. Default: http://localhost:4567/forum"
        }
    }
}


/*
Commands and services for 'onlyoffice-stats' check from LinuxFabrik Monitoring Plugin:

Checks OnlyOffice statistics and license usage via HTTP.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/onlyoffice-stats
*/

object CheckCommand "_win_linuxfabrik_onlyoffice_stats" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\onlyoffice-stats.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_onlyoffice_stats_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_onlyoffice_stats_version$"
            description = "show program's version number and exit"
        }
        "--test" = {
            value = "$linuxfabrik_onlyoffice_stats_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_onlyoffice_stats_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_onlyoffice_stats_url$"
            description = "OnlyOffice API URL. Default: http://localhost"
        }
    }
}


/*
Commands and services for 'path-rw-test' check from LinuxFabrik Monitoring Plugin:

Tests whether a file can be written to a specific path and then deleted.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/path-rw-test
*/

object CheckCommand "_win_linuxfabrik_path_rw_test" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\path-rw-test.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_path_rw_test_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_path_rw_test_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_path_rw_test_always_ok$"
            description = "Always returns OK."
        }
        "--path" = {
            value = "$linuxfabrik_path_rw_test_path$"
            description = "Path to which the file is to be written and from which it will be deleted (repeating). Default: ['/tmp']"
            repeat_key = true
        }
        "--severity" = {
            value = "$linuxfabrik_path_rw_test_severity$"
            description = "Severity for alerting. One of 'warn' or 'crit'. Default: warn"
        }
    }
}


/*
Commands and services for 'php-fpm-ping' check from LinuxFabrik Monitoring Plugin:

Fetches the ping monitoring page of PHP-FPM.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/php-fpm-ping
*/

object CheckCommand "_win_linuxfabrik_php_fpm_ping" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\php-fpm-ping.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_php_fpm_ping_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_php_fpm_ping_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_php_fpm_ping_always_ok$"
            description = "Always returns OK."
        }
        "--response" = {
            value = "$linuxfabrik_php_fpm_ping_response$"
            description = "Expected PHP-FPM Ping response. Default: pong"
        }
        "--severity" = {
            value = "$linuxfabrik_php_fpm_ping_severity$"
            description = "Severity for alerting. One of 'warn' or 'crit'. Default: warn"
        }
        "--test" = {
            value = "$linuxfabrik_php_fpm_ping_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--url" = {
            value = "$linuxfabrik_php_fpm_ping_url$"
            description = "PHP-FPM Ping URL. Default: http://localhost/fpm-ping"
        }
    }
}


/*
Commands and services for 'php-fpm-status' check from LinuxFabrik Monitoring Plugin:

that is being served).

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/php-fpm-status
*/

object CheckCommand "_win_linuxfabrik_php_fpm_status" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\php-fpm-status.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_php_fpm_status_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_php_fpm_status_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_php_fpm_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_php_fpm_status_critical$"
            description = "Set the CRIT threshold for queue usage as a percentage. Default: >= 90"
        }
        "--critical-maxchildren" = {
            value = "$linuxfabrik_php_fpm_status_critical_maxchildren$"
            description = "Set the CRIT threshold for the number of times the process limit has been reached. Default: >= 100"
        }
        "--critical-slowreq" = {
            value = "$linuxfabrik_php_fpm_status_critical_slowreq$"
            description = "Set the CRIT threshold for slow requests. Default: >= 100"
        }
        "--test" = {
            value = "$linuxfabrik_php_fpm_status_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--url" = {
            value = "$linuxfabrik_php_fpm_status_url$"
            description = "PHP-FPM Status URL. Default: http://localhost/fpm-status"
        }
        "--warning" = {
            value = "$linuxfabrik_php_fpm_status_warning$"
            description = "Set the WARN threshold for queue usage as a percentage. Default: >= 80"
        }
        "--warning-maxchildren" = {
            value = "$linuxfabrik_php_fpm_status_warning_maxchildren$"
            description = "Set the WARN threshold for the number of times the process limit has been reached. Default: >= 1"
        }
        "--warning-slowreq" = {
            value = "$linuxfabrik_php_fpm_status_warning_slowreq$"
            description = "Set the WARN threshold for slow requests. Default: >= 1"
        }
    }
}


/*
Commands and services for 'php-status' check from LinuxFabrik Monitoring Plugin:

php.ini directives.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/php-status
*/

object CheckCommand "_win_linuxfabrik_php_status" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\php-status.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_php_status_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_php_status_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_php_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_php_status_critical$"
            description = "Set the CRIT threshold for Opcache usage as a percentage. Default: >= None"
        }
        "--config" = {
            value = "$linuxfabrik_php_status_config$"
            description = "'key=value' pairs to check (startswith), for example `--config 'memory_limit=128M'` (repeating)"
            repeat_key = true
        }
        "--dev" = {
            set_if = "$linuxfabrik_php_status_dev$"
            description = "Be more tolerant in development environments: Allow `display_errors=On` and `display_startup_errors=On`."
        }
        "--module" = {
            value = "$linuxfabrik_php_status_module$"
            description = "'modulename' to check (startswith), for example `--module json --module mbstring` (repeating)"
            repeat_key = true
        }
        "--url" = {
            value = "$linuxfabrik_php_status_url$"
            description = "URL to optional PHP `monitoring.php` script. Default:http://localhost/monitoring.php"
        }
        "--warning" = {
            value = "$linuxfabrik_php_status_warning$"
            description = "Set the WARN threshold for Opcache usage as a percentage. Default: >= 90"
        }
    }
}


/*
Commands and services for 'php-version' check from LinuxFabrik Monitoring Plugin:

current/installed version of PHP, the check calls ``php --version``.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/php-version
*/

object CheckCommand "_win_linuxfabrik_php_version" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\php-version.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_php_version_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_php_version_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_php_version_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_php_version_cache_expire$"
            description = "The amount of time after which the update check cache expires, in hours. Default: 24"
        }
    }
}


/*
Commands and services for 'pip-updates' check from LinuxFabrik Monitoring Plugin:

Checks if there are updates for python packages installed via `pip`.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/pip-updates
*/

object CheckCommand "_win_linuxfabrik_pip_updates" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\pip-updates.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_pip_updates_help$"
            description = "show this help message and exit"
        }
        "--updates" = {
            set_if = "$linuxfabrik_pip_updates_updates$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_pip_updates_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_pip_updates_critical$"
            description = "Set the critical threshold for the number of pending updates. Default: 100"
        }
        "--test" = {
            value = "$linuxfabrik_pip_updates_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--warning" = {
            value = "$linuxfabrik_pip_updates_warning$"
            description = "Set the warning threshold for the number of pending updates. Default: 10"
        }
        "--virtualenv" = {
            value = "$linuxfabrik_pip_updates_virtualenv$"
            description = "Path of the virtualenv that will be activated before checking for updates. For example: '/opt/sphinx- venv/bin/activate'."
        }
    }
}


/*
Commands and services for 'procs' check from LinuxFabrik Monitoring Plugin:

process name, arguments and/or user name.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/procs
*/

object CheckCommand "_win_linuxfabrik_procs" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\procs.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_procs_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_procs_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_procs_always_ok$"
            description = "Always returns OK."
        }
        "--argument" = {
            value = "$linuxfabrik_procs_argument$"
            description = "Filter: Search only for processes containing ARGUMENT in the command, for example `-s` (case-insensitive)."
        }
        "--command" = {
            value = "$linuxfabrik_procs_command$"
            description = "Filter: Search only for processes starting with COMMAND, for example `bash` (without path, case- insensitive)."
        }
        "--critical" = {
            value = "$linuxfabrik_procs_critical$"
            description = "Threshold for the number of processes. Type: None or Range. Default: None"
        }
        "--critical-mem" = {
            value = "$linuxfabrik_procs_critical_mem$"
            description = "Threshold for memory usage, in bytes. Type: None or Range. Default: None"
        }
        "--critical-mem-percent" = {
            value = "$linuxfabrik_procs_critical_mem_percent$"
            description = "Threshold for memory usage, in percent. Type: None or Range. Default: None"
        }
        "--critical-age" = {
            value = "$linuxfabrik_procs_critical_age$"
            description = "Threshold for age of the process, in seconds. Type: None or Range. Default: None"
        }
        "--no-kthreads" = {
            set_if = "$linuxfabrik_procs_no_kthreads$"
            description = "Filter: Only scan for non kernel threads (works on Linux only). Default: False"
        }
        "--status" = {
            value = "$linuxfabrik_procs_status$"
            description = "-sleep,idle,locked,parked,running,sleeping,stopped,suspended,tracing-stop,waiting,wake-kill,waking,zombie} Filter: Search only for processes that have a specific status. Default: None,"
        }
        "--username" = {
            value = "$linuxfabrik_procs_username$"
            description = "Filter: Search only for processes with specific user name, e.g. `apache` (case-insensitive)."
        }
        "--warning" = {
            value = "$linuxfabrik_procs_warning$"
            description = "Threshold for the number of processes. Type: None or Range. Default: None"
        }
        "--warning-mem" = {
            value = "$linuxfabrik_procs_warning_mem$"
            description = "Threshold for memory usage, in bytes. Type: None or Range. Default: None"
        }
        "--warning-mem-percent" = {
            value = "$linuxfabrik_procs_warning_mem_percent$"
            description = "Threshold for memory usage, in percent. Type: None or Range. Default: None"
        }
        "--warning-age" = {
            value = "$linuxfabrik_procs_warning_age$"
            description = "Threshold for age of the process, in seconds. Type: None or Range. Default: None"
        }
    }
}


/*
Commands and services for 'qts-cpu-usage' check from LinuxFabrik Monitoring Plugin:

based authentication, which is stated as "legacy".

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/qts-cpu-usage
*/

object CheckCommand "_win_linuxfabrik_qts_cpu_usage" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\qts-cpu-usage.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_qts_cpu_usage_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_qts_cpu_usage_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_qts_cpu_usage_always_ok$"
            description = "Always returns OK."
        }
        "--count" = {
            value = "$linuxfabrik_qts_cpu_usage_count$"
            description = "Number of times the value has to be above the given thresholds. Default: 5"
        }
        "--critical" = {
            value = "$linuxfabrik_qts_cpu_usage_critical$"
            description = "Set the critical threshold CPU Usage Percentage. Default: 90"
        }
        "--insecure" = {
            set_if = "$linuxfabrik_qts_cpu_usage_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_qts_cpu_usage_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_qts_cpu_usage_password$"
            description = "QTS Password."
        }
        "--timeout" = {
            value = "$linuxfabrik_qts_cpu_usage_timeout$"
            description = "Network timeout in seconds. Default: 6 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_qts_cpu_usage_url$"
            description = "QTS-based Appliance URL, for example https://192.168.1.1:8080."
        }
        "--username" = {
            value = "$linuxfabrik_qts_cpu_usage_username$"
            description = "QTS User. Default: admin"
        }
        "--warning" = {
            value = "$linuxfabrik_qts_cpu_usage_warning$"
            description = "Set the warning threshold CPU Usage Percentage. Default: 80"
        }
    }
}


/*
Commands and services for 'qts-disk-smart' check from LinuxFabrik Monitoring Plugin:

Checks the disk SMART values returned by QTS.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/qts-disk-smart
*/

object CheckCommand "_win_linuxfabrik_qts_disk_smart" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\qts-disk-smart.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_qts_disk_smart_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_qts_disk_smart_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_qts_disk_smart_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_qts_disk_smart_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_qts_disk_smart_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_qts_disk_smart_password$"
            description = "QTS Password."
        }
        "--timeout" = {
            value = "$linuxfabrik_qts_disk_smart_timeout$"
            description = "Network timeout in seconds. Default: 6 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_qts_disk_smart_url$"
            description = "QTS-based Appliance URL, for example https://192.168.1.1:8080."
        }
        "--username" = {
            value = "$linuxfabrik_qts_disk_smart_username$"
            description = "QTS User. Default: admin"
        }
    }
}


/*
Commands and services for 'qts-memory-usage' check from LinuxFabrik Monitoring Plugin:

Appliances running QTS via API.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/qts-memory-usage
*/

object CheckCommand "_win_linuxfabrik_qts_memory_usage" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\qts-memory-usage.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_qts_memory_usage_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_qts_memory_usage_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_qts_memory_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_qts_memory_usage_critical$"
            description = "Set the critical threshold Memory Usage Percentage. Default: 90"
        }
        "--insecure" = {
            set_if = "$linuxfabrik_qts_memory_usage_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_qts_memory_usage_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_qts_memory_usage_password$"
            description = "QTS Password."
        }
        "--timeout" = {
            value = "$linuxfabrik_qts_memory_usage_timeout$"
            description = "Network timeout in seconds. Default: 6 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_qts_memory_usage_url$"
            description = "QTS-based Appliance URL, for example https://192.168.1.1:8080."
        }
        "--username" = {
            value = "$linuxfabrik_qts_memory_usage_username$"
            description = "QTS User. Default: admin"
        }
        "--warning" = {
            value = "$linuxfabrik_qts_memory_usage_warning$"
            description = "Set the warning threshold Memory Usage Percentage. Default: 80"
        }
    }
}


/*
Commands and services for 'qts-temperatures' check from LinuxFabrik Monitoring Plugin:

Returns the current temperatures from QNAP Appliances running QTS via API.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/qts-temperatures
*/

object CheckCommand "_win_linuxfabrik_qts_temperatures" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\qts-temperatures.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_qts_temperatures_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_qts_temperatures_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_qts_temperatures_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_qts_temperatures_critical$"
            description = "Set the critical threshold for the sytem and CPU temperature. Default: 80"
        }
        "--insecure" = {
            set_if = "$linuxfabrik_qts_temperatures_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_qts_temperatures_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_qts_temperatures_password$"
            description = "QTS Password."
        }
        "--timeout" = {
            value = "$linuxfabrik_qts_temperatures_timeout$"
            description = "Network timeout in seconds. Default: 6 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_qts_temperatures_url$"
            description = "QTS-based Appliance URL, for example https://192.168.1.1:8080."
        }
        "--username" = {
            value = "$linuxfabrik_qts_temperatures_username$"
            description = "QTS User. Default: admin"
        }
        "--warning" = {
            value = "$linuxfabrik_qts_temperatures_warning$"
            description = "Set the warning threshold for the sytem and CPU temperature. Default: 70"
        }
    }
}


/*
Commands and services for 'qts-uptime' check from LinuxFabrik Monitoring Plugin:

Tells how long the system has been running.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/qts-uptime
*/

object CheckCommand "_win_linuxfabrik_qts_uptime" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\qts-uptime.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_qts_uptime_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_qts_uptime_version$"
            description = "show program's version number and exit"
        }
        "--url" = {
            value = "$linuxfabrik_qts_uptime_url$"
            description = "QTS-based Appliance URL, for example https://192.168.1.1:8080."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_qts_uptime_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_qts_uptime_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--username" = {
            value = "$linuxfabrik_qts_uptime_username$"
            description = "QTS User. Default: admin"
        }
        "--password" = {
            value = "$linuxfabrik_qts_uptime_password$"
            description = "QTS Password."
        }
        "--timeout" = {
            value = "$linuxfabrik_qts_uptime_timeout$"
            description = "Network timeout in seconds. Default: 6 (seconds)"
        }
    }
}


/*
Commands and services for 'qts-version' check from LinuxFabrik Monitoring Plugin:

This plugin lets you track if server updates are available.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/qts-version
*/

object CheckCommand "_win_linuxfabrik_qts_version" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\qts-version.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_qts_version_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_qts_version_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_qts_version_always_ok$"
            description = "Always returns OK."
        }
        "--insecure" = {
            set_if = "$linuxfabrik_qts_version_insecure$"
            description = "This option explicitly allows to perform 'insecure' SSL connections. Default: False"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_qts_version_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_qts_version_password$"
            description = "QTS Password."
        }
        "--timeout" = {
            value = "$linuxfabrik_qts_version_timeout$"
            description = "Network timeout in seconds. Default: 6 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_qts_version_url$"
            description = "QTS-based Appliance URL, for example https://192.168.1.1:8080."
        }
        "--username" = {
            value = "$linuxfabrik_qts_version_username$"
            description = "QTS User. Default: admin"
        }
    }
}


/*
Commands and services for 'redfish-drives' check from LinuxFabrik Monitoring Plugin:

collection.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/redfish-drives
*/

object CheckCommand "_win_linuxfabrik_redfish_drives" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\redfish-drives.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_redfish_drives_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_redfish_drives_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_redfish_drives_always_ok$"
            description = "Always returns OK."
        }
        "--password" = {
            value = "$linuxfabrik_redfish_drives_password$"
            description = "Redfish API password."
        }
        "--url" = {
            value = "$linuxfabrik_redfish_drives_url$"
            description = "Redfish API URL. Default: https://localhost:5000"
        }
        "--username" = {
            value = "$linuxfabrik_redfish_drives_username$"
            description = "Redfish API username."
        }
    }
}


/*
Commands and services for 'redfish-sel' check from LinuxFabrik Monitoring Plugin:

an alert based on the severity of the messages.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/redfish-sel
*/

object CheckCommand "_win_linuxfabrik_redfish_sel" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\redfish-sel.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_redfish_sel_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_redfish_sel_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_redfish_sel_always_ok$"
            description = "Always returns OK."
        }
        "--password" = {
            value = "$linuxfabrik_redfish_sel_password$"
            description = "Redfish API password."
        }
        "--url" = {
            value = "$linuxfabrik_redfish_sel_url$"
            description = "Redfish API URL. Default: https://localhost:5000"
        }
        "--username" = {
            value = "$linuxfabrik_redfish_sel_username$"
            description = "Redfish API username."
        }
    }
}


/*
Commands and services for 'redfish-sensor' check from LinuxFabrik Monitoring Plugin:

resource can house sensors, fans, and other components.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/redfish-sensor
*/

object CheckCommand "_win_linuxfabrik_redfish_sensor" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\redfish-sensor.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_redfish_sensor_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_redfish_sensor_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_redfish_sensor_always_ok$"
            description = "Always returns OK."
        }
        "--password" = {
            value = "$linuxfabrik_redfish_sensor_password$"
            description = "Redfish API password."
        }
        "--url" = {
            value = "$linuxfabrik_redfish_sensor_url$"
            description = "Redfish API URL. Default: https://localhost:5000"
        }
        "--username" = {
            value = "$linuxfabrik_redfish_sensor_username$"
            description = "Redfish API username."
        }
    }
}


/*
Commands and services for 'restic-check' check from LinuxFabrik Monitoring Plugin:

Check the restic repository for errors.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/restic-check
*/

object CheckCommand "_win_linuxfabrik_restic_check" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\restic-check.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_restic_check_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_restic_check_version$"
            description = "show program's version number and exit"
        }
        "--password-file" = {
            value = "$linuxfabrik_restic_check_password_file$"
            description = "File to read the repository password from"
        }
        "--repo" = {
            value = "$linuxfabrik_restic_check_repo$"
            description = "Repository location"
        }
        "--test" = {
            value = "$linuxfabrik_restic_check_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
    }
}


/*
Commands and services for 'restic-snapshots' check from LinuxFabrik Monitoring Plugin:

Check the age of the newest restic repository snapshot.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/restic-snapshots
*/

object CheckCommand "_win_linuxfabrik_restic_snapshots" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\restic-snapshots.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_restic_snapshots_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_restic_snapshots_version$"
            description = "show program's version number and exit"
        }
        "--critical" = {
            value = "$linuxfabrik_restic_snapshots_critical$"
            description = "Set the critical threshold for the time difference to the start of the last backup (in each group) (in hours). Default: None"
        }
        "--group-by" = {
            value = "$linuxfabrik_restic_snapshots_group_by$"
            description = "String for grouping snapshots by host,paths,tags. Default: host,tags,paths"
        }
        "--host" = {
            value = "$linuxfabrik_restic_snapshots_host$"
            description = "Only consider snapshots for this host (can be specified multiple times)."
        }
        "--latest" = {
            value = "$linuxfabrik_restic_snapshots_latest$"
            description = "Only show the last n snapshots for each host and path. Default: 3"
        }
        "--password-file" = {
            value = "$linuxfabrik_restic_snapshots_password_file$"
            description = "File to read the repository password from."
        }
        "--path" = {
            value = "$linuxfabrik_restic_snapshots_path$"
            description = "Only consider snapshots for this path (can be specified multiple times)."
        }
        "--repo" = {
            value = "$linuxfabrik_restic_snapshots_repo$"
            description = "Repository location"
        }
        "--tag" = {
            value = "$linuxfabrik_restic_snapshots_tag$"
            description = "Only consider snapshots which include this taglist in the format `tag[,tag,...]` (can be specified multiple times)."
        }
        "--test" = {
            value = "$linuxfabrik_restic_snapshots_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--warning" = {
            value = "$linuxfabrik_restic_snapshots_warning$"
            description = "Set the warning threshold for the time difference to the start of the last backup (in each group) (in hours). Default: 24"
        }
    }
}


/*
Commands and services for 'restic-stats' check from LinuxFabrik Monitoring Plugin:

according to one of the counting modes as given by the --mode flag.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/restic-stats
*/

object CheckCommand "_win_linuxfabrik_restic_stats" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\restic-stats.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_restic_stats_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_restic_stats_version$"
            description = "show program's version number and exit"
        }
        "--host" = {
            value = "$linuxfabrik_restic_stats_host$"
            description = "Only consider snapshots for this host (can be specified multiple times)."
        }
        "--mode" = {
            value = "$linuxfabrik_restic_stats_mode$"
            description = "-size,files-by-contents,blobs-per-file,raw-data} Counting mode. Default: restore-size"
        }
        "--password-file" = {
            value = "$linuxfabrik_restic_stats_password_file$"
            description = "File to read the repository password from"
        }
        "--path" = {
            value = "$linuxfabrik_restic_stats_path$"
            description = "Only consider snapshots for this path (can be specified multiple times)."
        }
        "--repo" = {
            value = "$linuxfabrik_restic_stats_repo$"
            description = "Repository location"
        }
        "--tag" = {
            value = "$linuxfabrik_restic_stats_tag$"
            description = "Only consider snapshots which include this taglist in the format `tag[,tag,...]` (can be specified multiple times)."
        }
        "--test" = {
            value = "$linuxfabrik_restic_stats_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
    }
}


/*
Commands and services for 'rocketchat-stats' check from LinuxFabrik Monitoring Plugin:

user with strong password and (just) "view-statistics" permission.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/rocketchat-stats
*/

object CheckCommand "_win_linuxfabrik_rocketchat_stats" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\rocketchat-stats.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_rocketchat_stats_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_rocketchat_stats_version$"
            description = "show program's version number and exit"
        }
        "--password" = {
            value = "$linuxfabrik_rocketchat_stats_password$"
            description = "Rocket.Chat API password."
        }
        "--url" = {
            value = "$linuxfabrik_rocketchat_stats_url$"
            description = "Rocket.Chat API URL. Default:http://localhost:3000/api/v1"
        }
        "--username" = {
            value = "$linuxfabrik_rocketchat_stats_username$"
            description = "Rocket.Chat API username. Default: rocket-stats"
        }
    }
}


/*
Commands and services for 'rocketchat-version' check from LinuxFabrik Monitoring Plugin:

with strong password and "view-statistics" permission (only).

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/rocketchat-version
*/

object CheckCommand "_win_linuxfabrik_rocketchat_version" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\rocketchat-version.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_rocketchat_version_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_rocketchat_version_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_rocketchat_version_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_rocketchat_version_cache_expire$"
            description = "The amount of time after which the update check cache expires, in hours. Default: 24"
        }
        "--password" = {
            value = "$linuxfabrik_rocketchat_version_password$"
            description = "Rocket.Chat API password."
        }
        "--url" = {
            value = "$linuxfabrik_rocketchat_version_url$"
            description = "Rocket.Chat API URL. Default:http://localhost:3000/api/v1"
        }
        "--username" = {
            value = "$linuxfabrik_rocketchat_version_username$"
            description = "Rocket.Chat API username. Default: rocket-stats"
        }
    }
}


/*
Commands and services for 'sap-open-concur-com' check from LinuxFabrik Monitoring Plugin:

(https://open.concur.com/) Service Status Dashboard.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/sap-open-concur-com
*/

object CheckCommand "_win_linuxfabrik_sap_open_concur_com" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\sap-open-concur-com.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_sap_open_concur_com_help$"
            description = "show this help message and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_sap_open_concur_com_always_ok$"
            description = "Always returns OK."
        }
        "--version" = {
            set_if = "$linuxfabrik_sap_open_concur_com_version$"
            description = "show program's version number and exit"
        }
        "--datacenter" = {
            value = "$linuxfabrik_sap_open_concur_com_datacenter$"
            description = "Datacenter to query. Default: emea"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_sap_open_concur_com_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--service" = {
            value = "$linuxfabrik_sap_open_concur_com_service$"
            description = "Service to check. One of 'Analysis/Intelligence', 'Compleat (TMC Services)', 'Expense', 'Imaging', 'Invoice', 'Mobile', 'Request', 'Travel', or simply 'All'. Check https://open.concur.com to see which service is available for which data center. Default: All"
        }
        "--timeout" = {
            value = "$linuxfabrik_sap_open_concur_com_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--utc-offset" = {
            value = "$linuxfabrik_sap_open_concur_com_utc_offset$"
            description = "UTC offset. Default: +0200"
        }
    }
}


/*
Commands and services for 'scheduled-task' check from LinuxFabrik Monitoring Plugin:

Check the status of a scheduled task.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/scheduled-task
*/

object CheckCommand "_win_linuxfabrik_scheduled_task" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\scheduled-task.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_scheduled_task_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_scheduled_task_version$"
            description = "show program's version number and exit"
        }
        "--severity" = {
            value = "$linuxfabrik_scheduled_task_severity$"
            description = "Severity if something is found. Default: warn"
        }
        "--status" = {
            value = "$linuxfabrik_scheduled_task_status$"
            description = "Expected task status (repeating). Default: ['Ready', 'Running']"
            repeat_key = true
        }
        "--task" = {
            value = "$linuxfabrik_scheduled_task_task$"
            description = "Name of the scheduled task."
        }
    }
}


/*
Commands and services for 'service' check from LinuxFabrik Monitoring Plugin:

host with almost the same name, for example.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/service
*/

object CheckCommand "_win_linuxfabrik_service" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\service.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_service_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_service_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_service_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_service_critical$"
            description = "Set the CRIT threshold. Accepts ranges. Default: 'None'"
        }
        "--service" = {
            value = "$linuxfabrik_service_service$"
            description = "Name of the service. Supports Python Regular Expressions (regex)."
        }
        "--starttype" = {
            value = "$linuxfabrik_service_starttype$"
            description = "Expected service start type. Default: automatic"
        }
        "--status" = {
            value = "$linuxfabrik_service_status$"
            description = "At least one expected service status (repeating). Default: running"
            repeat_key = true
        }
        "--warning" = {
            value = "$linuxfabrik_service_warning$"
            description = "Set the WARN threshold. Accepts ranges. Default: '1:'"
        }
    }
}


/*
Commands and services for 'starface-account-stats' check from LinuxFabrik Monitoring Plugin:

the data again and overload the PBX.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/starface-account-stats
*/

object CheckCommand "_win_linuxfabrik_starface_account_stats" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\starface-account-stats.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_starface_account_stats_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_starface_account_stats_version$"
            description = "show program's version number and exit"
        }
        "--cache-expire" = {
            value = "$linuxfabrik_starface_account_stats_cache_expire$"
            description = "The amount of time after which the cached data expires, in minutes. Default: 1"
        }
        "--hostname" = {
            value = "$linuxfabrik_starface_account_stats_hostname$"
            description = "Starface PBX address, can be IP address or hostname. Default: localhost"
        }
        "--port" = {
            value = "$linuxfabrik_starface_account_stats_port$"
            description = "Starface PBX monitoring port. Default: 6556"
        }
        "--test" = {
            value = "$linuxfabrik_starface_account_stats_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_starface_account_stats_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--6" = {
            set_if = "$linuxfabrik_starface_account_stats_6$"
            description = "Use IPv6."
        }
    }
}


/*
Commands and services for 'starface-backup-status' check from LinuxFabrik Monitoring Plugin:

do not query the data again and overload the PBX.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/starface-backup-status
*/

object CheckCommand "_win_linuxfabrik_starface_backup_status" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\starface-backup-status.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_starface_backup_status_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_starface_backup_status_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_starface_backup_status_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_starface_backup_status_cache_expire$"
            description = "The amount of time after which the cached data expires, in minutes. Default: 1"
        }
        "--critical" = {
            value = "$linuxfabrik_starface_backup_status_critical$"
            description = "Set the critical threshold for the time difference to the start of the last backup (in hours). Default: None"
        }
        "--hostname" = {
            value = "$linuxfabrik_starface_backup_status_hostname$"
            description = "Starface PBX address, can be IP address or hostname. Default: localhost"
        }
        "--port" = {
            value = "$linuxfabrik_starface_backup_status_port$"
            description = "Starface PBX monitoring port. Default: 6556"
        }
        "--test" = {
            value = "$linuxfabrik_starface_backup_status_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_starface_backup_status_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--warning" = {
            value = "$linuxfabrik_starface_backup_status_warning$"
            description = "Set the warning threshold for the time difference to the start of the last backup (in hours). Default: 24"
        }
        "--6" = {
            set_if = "$linuxfabrik_starface_backup_status_6$"
            description = "Use IPv6."
        }
    }
}


/*
Commands and services for 'starface-channel-status' check from LinuxFabrik Monitoring Plugin:

parallel do not query the data again and overload the PBX.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/starface-channel-status
*/

object CheckCommand "_win_linuxfabrik_starface_channel_status" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\starface-channel-status.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_starface_channel_status_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_starface_channel_status_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_starface_channel_status_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_starface_channel_status_cache_expire$"
            description = "The amount of time after which the cached data expires, in minutes. Default: 1"
        }
        "--critical" = {
            value = "$linuxfabrik_starface_channel_status_critical$"
            description = "Set the critical threshold (percentage). Default: 90"
        }
        "--hostname" = {
            value = "$linuxfabrik_starface_channel_status_hostname$"
            description = "Starface PBX address, can be IP address or hostname. Default: localhost"
        }
        "--port" = {
            value = "$linuxfabrik_starface_channel_status_port$"
            description = "Starface PBX monitoring port. Default: 6556"
        }
        "--test" = {
            value = "$linuxfabrik_starface_channel_status_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_starface_channel_status_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--warning" = {
            value = "$linuxfabrik_starface_channel_status_warning$"
            description = "Set the warning threshold (percentage). Default: 80"
        }
        "--6" = {
            set_if = "$linuxfabrik_starface_channel_status_6$"
            description = "Use IPv6."
        }
    }
}


/*
Commands and services for 'starface-database-stats' check from LinuxFabrik Monitoring Plugin:

parallel do not query the data again and overload the PBX.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/starface-database-stats
*/

object CheckCommand "_win_linuxfabrik_starface_database_stats" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\starface-database-stats.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_starface_database_stats_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_starface_database_stats_version$"
            description = "show program's version number and exit"
        }
        "--cache-expire" = {
            value = "$linuxfabrik_starface_database_stats_cache_expire$"
            description = "The amount of time after which the cached data expires, in minutes. Default: 1"
        }
        "--hostname" = {
            value = "$linuxfabrik_starface_database_stats_hostname$"
            description = "Starface PBX address, can be IP address or hostname. Default: localhost"
        }
        "--port" = {
            value = "$linuxfabrik_starface_database_stats_port$"
            description = "Starface PBX monitoring port. Default: 6556"
        }
        "--test" = {
            value = "$linuxfabrik_starface_database_stats_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_starface_database_stats_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--6" = {
            set_if = "$linuxfabrik_starface_database_stats_6$"
            description = "Use IPv6."
        }
    }
}


/*
Commands and services for 'starface-java-memory-usage' check from LinuxFabrik Monitoring Plugin:

plugins running in parallel do not query the data again and overload the PBX.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/starface-java-memory-usage
*/

object CheckCommand "_win_linuxfabrik_starface_java_memory_usage" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\starface-java-memory-usage.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_starface_java_memory_usage_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_starface_java_memory_usage_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_starface_java_memory_usage_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_starface_java_memory_usage_cache_expire$"
            description = "The amount of time after which the cached data expires, in minutes. Default: 1"
        }
        "--critical" = {
            value = "$linuxfabrik_starface_java_memory_usage_critical$"
            description = "Set the critical threshold (percentage). Default: 90"
        }
        "--hostname" = {
            value = "$linuxfabrik_starface_java_memory_usage_hostname$"
            description = "Starface PBX address, can be IP address or hostname. Default: localhost"
        }
        "--port" = {
            value = "$linuxfabrik_starface_java_memory_usage_port$"
            description = "Starface PBX monitoring port. Default: 6556"
        }
        "--test" = {
            value = "$linuxfabrik_starface_java_memory_usage_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_starface_java_memory_usage_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--warning" = {
            value = "$linuxfabrik_starface_java_memory_usage_warning$"
            description = "Set the warning threshold (percentage). Default: 80"
        }
        "--6" = {
            set_if = "$linuxfabrik_starface_java_memory_usage_6$"
            description = "Use IPv6."
        }
    }
}


/*
Commands and services for 'starface-peer-stats' check from LinuxFabrik Monitoring Plugin:

the data again and overload the PBX.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/starface-peer-stats
*/

object CheckCommand "_win_linuxfabrik_starface_peer_stats" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\starface-peer-stats.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_starface_peer_stats_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_starface_peer_stats_version$"
            description = "show program's version number and exit"
        }
        "--cache-expire" = {
            value = "$linuxfabrik_starface_peer_stats_cache_expire$"
            description = "The amount of time after which the cached data expires, in minutes. Default: 1"
        }
        "--hostname" = {
            value = "$linuxfabrik_starface_peer_stats_hostname$"
            description = "Starface PBX address, can be IP address or hostname. Default: localhost"
        }
        "--port" = {
            value = "$linuxfabrik_starface_peer_stats_port$"
            description = "Starface PBX monitoring port. Default: 6556"
        }
        "--test" = {
            value = "$linuxfabrik_starface_peer_stats_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_starface_peer_stats_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--6" = {
            set_if = "$linuxfabrik_starface_peer_stats_6$"
            description = "Use IPv6."
        }
    }
}


/*
Commands and services for 'starface-status' check from LinuxFabrik Monitoring Plugin:

the data again and overload the PBX.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/starface-status
*/

object CheckCommand "_win_linuxfabrik_starface_status" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\starface-status.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_starface_status_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_starface_status_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_starface_status_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_starface_status_cache_expire$"
            description = "The amount of time after which the cached data expires, in minutes. Default: 1"
        }
        "--critical" = {
            value = "$linuxfabrik_starface_status_critical$"
            description = "Set the critical threshold (percentage). Default: 90"
        }
        "--hostname" = {
            value = "$linuxfabrik_starface_status_hostname$"
            description = "Starface PBX address, can be IP address or hostname. Default: localhost"
        }
        "--port" = {
            value = "$linuxfabrik_starface_status_port$"
            description = "Starface PBX monitoring port. Default: 6556"
        }
        "--test" = {
            value = "$linuxfabrik_starface_status_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_starface_status_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--warning" = {
            value = "$linuxfabrik_starface_status_warning$"
            description = "Set the warning threshold (percentage). Default: 80"
        }
        "--6" = {
            set_if = "$linuxfabrik_starface_status_6$"
            description = "Use IPv6."
        }
    }
}


/*
Commands and services for 'swap-usage' check from LinuxFabrik Monitoring Plugin:

swap in percent.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/swap-usage
*/

object CheckCommand "_win_linuxfabrik_swap_usage" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\swap-usage.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_swap_usage_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_swap_usage_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_swap_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_swap_usage_critical$"
            description = "Set the critical threshold for swap usage (in percent). Default: 90"
        }
        "--warning" = {
            value = "$linuxfabrik_swap_usage_warning$"
            description = "Set the warning threshold for swap usage (in percent). Default: 70"
        }
    }
}


/*
Commands and services for 'updates' check from LinuxFabrik Monitoring Plugin:

Checks the number of pending updates.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/updates
*/

object CheckCommand "_win_linuxfabrik_updates" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\updates.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_updates_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_updates_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_updates_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_updates_critical$"
            description = "Set the critical threshold for the number of pending updates. Default: 50"
        }
        "--warning" = {
            value = "$linuxfabrik_updates_warning$"
            description = "Set the warning threshold for the number of pending updates. Default: 2"
        }
    }
}


/*
Commands and services for 'uptime' check from LinuxFabrik Monitoring Plugin:

Tell how long the system has been running.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/uptime
*/

object CheckCommand "_win_linuxfabrik_uptime" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\uptime.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_uptime_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_uptime_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_uptime_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_uptime_critical$"
            description = "Set the critical threshold for uptime in days. Default: 366"
        }
        "--warning" = {
            value = "$linuxfabrik_uptime_warning$"
            description = "Set the warning threshold for uptime in days. Default: 180"
        }
    }
}


/*
Commands and services for 'users' check from LinuxFabrik Monitoring Plugin:

disconnected users on Windows (closed connections without logging out).

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/users
*/

object CheckCommand "_win_linuxfabrik_users" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\users.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_users_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_users_version$"
            description = "show program's version number and exit"
        }
        "--critical" = {
            value = "$linuxfabrik_users_critical$"
            description = "Set the critical threshold for logged in tty/pts users, in the format '3,10'. On Windows, you can additionally set it for disconnected users, in the format '3,10,1'. Default: [None, None, None]"
        }
        "--warning" = {
            value = "$linuxfabrik_users_warning$"
            description = "Set the warning threshold for logged in tty/pts users, in the format '1,5'. On Windows, you can additionally set it for disconnected users, in the format '1,5,10'. Default: [1, 20, 1]"
        }
    }
}


/*
Commands and services for 'veeam-status' check from LinuxFabrik Monitoring Plugin:

Enterprise Manager API (requires a Veeam Enterprise License).

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/veeam-status
*/

object CheckCommand "_win_linuxfabrik_veeam_status" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\veeam-status.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_veeam_status_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_veeam_status_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_veeam_status_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_veeam_status_critical$"
            description = "Set the CRIT threshold as a percentage. Default: >= 90"
        }
        "--password" = {
            value = "$linuxfabrik_veeam_status_password$"
            description = "Veeam API password."
        }
        "--test" = {
            value = "$linuxfabrik_veeam_status_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--timeout" = {
            value = "$linuxfabrik_veeam_status_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_veeam_status_url$"
            description = "Veeam API URL. Default: https://localhost:9398"
        }
        "--username" = {
            value = "$linuxfabrik_veeam_status_username$"
            description = "Veeam API username. Default: Administrator"
        }
        "--warning" = {
            value = "$linuxfabrik_veeam_status_warning$"
            description = "Set the WARN threshold as a percentage. Default: >= 80"
        }
    }
}


/*
Commands and services for 'wildfly-deployment-status' check from LinuxFabrik Monitoring Plugin:

Checks the deployment status of a Wildfly/JBossAS over HTTP.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/wildfly-deployment-status
*/

object CheckCommand "_win_linuxfabrik_wildfly_deployment_status" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\wildfly-deployment-status.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_wildfly_deployment_status_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_wildfly_deployment_status_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_wildfly_deployment_status_always_ok$"
            description = "Always returns OK."
        }
        "--deployment" = {
            value = "$linuxfabrik_wildfly_deployment_status_deployment$"
            description = "The name of an application whose deployment status is to be checked (repeating). Default: None"
            repeat_key = true
        }
        "--instance" = {
            value = "$linuxfabrik_wildfly_deployment_status_instance$"
            description = "The instance (server-config) to check if running in domain mode."
        }
        "--mode" = {
            value = "$linuxfabrik_wildfly_deployment_status_mode$"
            description = "The mode the server is running."
        }
        "--node" = {
            value = "$linuxfabrik_wildfly_deployment_status_node$"
            description = "The node (host) if running in domain mode."
        }
        "--password" = {
            value = "$linuxfabrik_wildfly_deployment_status_password$"
            description = "WildFly API password."
        }
        "--timeout" = {
            value = "$linuxfabrik_wildfly_deployment_status_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_wildfly_deployment_status_url$"
            description = "WildFly API URL. Default: http://localhost:9990"
        }
        "--username" = {
            value = "$linuxfabrik_wildfly_deployment_status_username$"
            description = "WildFly API username. Default: wildfly-monitoring"
        }
    }
}


/*
Commands and services for 'wildfly-gc-status' check from LinuxFabrik Monitoring Plugin:

Prints the status of the Wildfly/JBossAS garbage collector.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/wildfly-gc-status
*/

object CheckCommand "_win_linuxfabrik_wildfly_gc_status" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\wildfly-gc-status.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_wildfly_gc_status_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_wildfly_gc_status_version$"
            description = "show program's version number and exit"
        }
        "--instance" = {
            value = "$linuxfabrik_wildfly_gc_status_instance$"
            description = "The instance (server-config) to check if running in domain mode."
        }
        "--mode" = {
            value = "$linuxfabrik_wildfly_gc_status_mode$"
            description = "The mode the server is running."
        }
        "--node" = {
            value = "$linuxfabrik_wildfly_gc_status_node$"
            description = "The node (host) if running in domain mode."
        }
        "--password" = {
            value = "$linuxfabrik_wildfly_gc_status_password$"
            description = "WildFly API password."
        }
        "--timeout" = {
            value = "$linuxfabrik_wildfly_gc_status_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_wildfly_gc_status_url$"
            description = "WildFly API URL. Default: http://localhost:9990"
        }
        "--username" = {
            value = "$linuxfabrik_wildfly_gc_status_username$"
            description = "WildFly API username. Default: wildfly-admin"
        }
    }
}


/*
Commands and services for 'wildfly-memory-pool-usage' check from LinuxFabrik Monitoring Plugin:

Checks the memory pool usage of a Wildfly/JBossAS over HTTP.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/wildfly-memory-pool-usage
*/

object CheckCommand "_win_linuxfabrik_wildfly_memory_pool_usage" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\wildfly-memory-pool-usage.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_wildfly_memory_pool_usage_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_wildfly_memory_pool_usage_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_wildfly_memory_pool_usage_always_ok$"
            description = "Always returns OK."
        }
        "--instance" = {
            value = "$linuxfabrik_wildfly_memory_pool_usage_instance$"
            description = "The instance (server-config) to check if running in domain mode."
        }
        "--mode" = {
            value = "$linuxfabrik_wildfly_memory_pool_usage_mode$"
            description = "The mode the server is running."
        }
        "--node" = {
            value = "$linuxfabrik_wildfly_memory_pool_usage_node$"
            description = "The node (host) if running in domain mode."
        }
        "--password" = {
            value = "$linuxfabrik_wildfly_memory_pool_usage_password$"
            description = "WildFly API password."
        }
        "--timeout" = {
            value = "$linuxfabrik_wildfly_memory_pool_usage_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_wildfly_memory_pool_usage_url$"
            description = "WildFly API URL. Default: http://localhost:9990"
        }
        "--username" = {
            value = "$linuxfabrik_wildfly_memory_pool_usage_username$"
            description = "WildFly API username. Default: wildfly-monitoring"
        }
    }
}


/*
Commands and services for 'wildfly-memory-usage' check from LinuxFabrik Monitoring Plugin:

Checks the memory usage of a Wildfly/JBossAS over HTTP.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/wildfly-memory-usage
*/

object CheckCommand "_win_linuxfabrik_wildfly_memory_usage" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\wildfly-memory-usage.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_wildfly_memory_usage_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_wildfly_memory_usage_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_wildfly_memory_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_wildfly_memory_usage_critical$"
            description = "Set the critical threshold."
        }
        "--instance" = {
            value = "$linuxfabrik_wildfly_memory_usage_instance$"
            description = "The instance (server-config) to check if running in domain mode."
        }
        "--mode" = {
            value = "$linuxfabrik_wildfly_memory_usage_mode$"
            description = "The mode the server is running."
        }
        "--node" = {
            value = "$linuxfabrik_wildfly_memory_usage_node$"
            description = "The node (host) if running in domain mode."
        }
        "--password" = {
            value = "$linuxfabrik_wildfly_memory_usage_password$"
            description = "WildFly API password."
        }
        "--timeout" = {
            value = "$linuxfabrik_wildfly_memory_usage_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_wildfly_memory_usage_url$"
            description = "WildFly API URL. Default: http://localhost:9990"
        }
        "--username" = {
            value = "$linuxfabrik_wildfly_memory_usage_username$"
            description = "WildFly API username. Default: wildfly-admin"
        }
        "--warning" = {
            value = "$linuxfabrik_wildfly_memory_usage_warning$"
            description = "Set the warning threshold."
        }
    }
}


/*
Commands and services for 'wildfly-non-xa-datasource-stats' check from LinuxFabrik Monitoring Plugin:

Returns metrics about Non-XA Datasources of a Wildfly/JBossAS over HTTP.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/wildfly-non-xa-datasource-stats
*/

object CheckCommand "_win_linuxfabrik_wildfly_non_xa_datasource_stats" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\wildfly-non-xa-datasource-stats.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_wildfly_non_xa_datasource_stats_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_wildfly_non_xa_datasource_stats_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_wildfly_non_xa_datasource_stats_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_wildfly_non_xa_datasource_stats_critical$"
            description = "Set the critical threshold."
        }
        "--datasource" = {
            value = "$linuxfabrik_wildfly_non_xa_datasource_stats_datasource$"
            description = "The name of a specific datasource (repeating). Default: None"
            repeat_key = true
        }
        "--instance" = {
            value = "$linuxfabrik_wildfly_non_xa_datasource_stats_instance$"
            description = "The instance (server-config) to check if running in domain mode."
        }
        "--mode" = {
            value = "$linuxfabrik_wildfly_non_xa_datasource_stats_mode$"
            description = "The mode the server is running."
        }
        "--node" = {
            value = "$linuxfabrik_wildfly_non_xa_datasource_stats_node$"
            description = "The node (host) if running in domain mode."
        }
        "--password" = {
            value = "$linuxfabrik_wildfly_non_xa_datasource_stats_password$"
            description = "WildFly API password."
        }
        "--timeout" = {
            value = "$linuxfabrik_wildfly_non_xa_datasource_stats_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_wildfly_non_xa_datasource_stats_url$"
            description = "WildFly API URL. Default: http://localhost:9990"
        }
        "--username" = {
            value = "$linuxfabrik_wildfly_non_xa_datasource_stats_username$"
            description = "WildFly API username. Default: wildfly-monitoring"
        }
        "--warning" = {
            value = "$linuxfabrik_wildfly_non_xa_datasource_stats_warning$"
            description = "Set the warning threshold."
        }
    }
}


/*
Commands and services for 'wildfly-server-status' check from LinuxFabrik Monitoring Plugin:

Checks the health of a Wildfly/JBossAS over HTTP.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/wildfly-server-status
*/

object CheckCommand "_win_linuxfabrik_wildfly_server_status" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\wildfly-server-status.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_wildfly_server_status_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_wildfly_server_status_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_wildfly_server_status_always_ok$"
            description = "Always returns OK."
        }
        "--instance" = {
            value = "$linuxfabrik_wildfly_server_status_instance$"
            description = "The instance (server-config) to check if running in domain mode."
        }
        "--mode" = {
            value = "$linuxfabrik_wildfly_server_status_mode$"
            description = "The mode the server is running."
        }
        "--node" = {
            value = "$linuxfabrik_wildfly_server_status_node$"
            description = "The node (host) if running in domain mode."
        }
        "--password" = {
            value = "$linuxfabrik_wildfly_server_status_password$"
            description = "WildFly API password."
        }
        "--timeout" = {
            value = "$linuxfabrik_wildfly_server_status_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_wildfly_server_status_url$"
            description = "WildFly API URL. Default: http://localhost:9990"
        }
        "--username" = {
            value = "$linuxfabrik_wildfly_server_status_username$"
            description = "WildFly API username. Default: wildfly-admin"
        }
    }
}


/*
Commands and services for 'wildfly-thread-usage' check from LinuxFabrik Monitoring Plugin:

Checks the thread utilization of a Wildfly/JBossAS over HTTP.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/wildfly-thread-usage
*/

object CheckCommand "_win_linuxfabrik_wildfly_thread_usage" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\wildfly-thread-usage.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_wildfly_thread_usage_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_wildfly_thread_usage_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_wildfly_thread_usage_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_wildfly_thread_usage_critical$"
            description = "Set the critical threshold."
        }
        "--instance" = {
            value = "$linuxfabrik_wildfly_thread_usage_instance$"
            description = "The instance (server-config) to check if running in domain mode."
        }
        "--mode" = {
            value = "$linuxfabrik_wildfly_thread_usage_mode$"
            description = "The mode the server is running."
        }
        "--node" = {
            value = "$linuxfabrik_wildfly_thread_usage_node$"
            description = "The node (host) if running in domain mode."
        }
        "--password" = {
            value = "$linuxfabrik_wildfly_thread_usage_password$"
            description = "WildFly API password."
        }
        "--timeout" = {
            value = "$linuxfabrik_wildfly_thread_usage_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_wildfly_thread_usage_url$"
            description = "WildFly API URL. Default: http://localhost:9990"
        }
        "--username" = {
            value = "$linuxfabrik_wildfly_thread_usage_username$"
            description = "WildFly API username. Default: wildfly-admin"
        }
        "--warning" = {
            value = "$linuxfabrik_wildfly_thread_usage_warning$"
            description = "Set the warning threshold."
        }
    }
}


/*
Commands and services for 'wildfly-uptime' check from LinuxFabrik Monitoring Plugin:

Checks the uptime of a Wildfly/JBossAS over HTTP.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/wildfly-uptime
*/

object CheckCommand "_win_linuxfabrik_wildfly_uptime" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\wildfly-uptime.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_wildfly_uptime_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_wildfly_uptime_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_wildfly_uptime_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_wildfly_uptime_critical$"
            description = "Set the critical threshold."
        }
        "--instance" = {
            value = "$linuxfabrik_wildfly_uptime_instance$"
            description = "The instance (server-config) to check if running in domain mode."
        }
        "--mode" = {
            value = "$linuxfabrik_wildfly_uptime_mode$"
            description = "The mode the server is running."
        }
        "--node" = {
            value = "$linuxfabrik_wildfly_uptime_node$"
            description = "The node (host) if running in domain mode."
        }
        "--password" = {
            value = "$linuxfabrik_wildfly_uptime_password$"
            description = "WildFly API password."
        }
        "--timeout" = {
            value = "$linuxfabrik_wildfly_uptime_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_wildfly_uptime_url$"
            description = "WildFly API URL. Default: http://localhost:9990"
        }
        "--username" = {
            value = "$linuxfabrik_wildfly_uptime_username$"
            description = "WildFly API username. Default: wildfly-admin"
        }
        "--warning" = {
            value = "$linuxfabrik_wildfly_uptime_warning$"
            description = "Set the warning threshold."
        }
    }
}


/*
Commands and services for 'wildfly-xa-datasource-stats' check from LinuxFabrik Monitoring Plugin:

Returns metrics about XA Datasources of a Wildfly/JBossAS over HTTP.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/wildfly-xa-datasource-stats
*/

object CheckCommand "_win_linuxfabrik_wildfly_xa_datasource_stats" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\wildfly-xa-datasource-stats.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_wildfly_xa_datasource_stats_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_wildfly_xa_datasource_stats_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_wildfly_xa_datasource_stats_always_ok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_wildfly_xa_datasource_stats_critical$"
            description = "Set the critical threshold."
        }
        "--datasource" = {
            value = "$linuxfabrik_wildfly_xa_datasource_stats_datasource$"
            description = "The name of a specific datasource (repeating). Default: None"
            repeat_key = true
        }
        "--instance" = {
            value = "$linuxfabrik_wildfly_xa_datasource_stats_instance$"
            description = "The instance (server-config) to check if running in domain mode."
        }
        "--mode" = {
            value = "$linuxfabrik_wildfly_xa_datasource_stats_mode$"
            description = "The mode the server is running."
        }
        "--node" = {
            value = "$linuxfabrik_wildfly_xa_datasource_stats_node$"
            description = "The node (host) if running in domain mode."
        }
        "--password" = {
            value = "$linuxfabrik_wildfly_xa_datasource_stats_password$"
            description = "WildFly API password."
        }
        "--timeout" = {
            value = "$linuxfabrik_wildfly_xa_datasource_stats_timeout$"
            description = "Network timeout in seconds. Default: 3 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_wildfly_xa_datasource_stats_url$"
            description = "WildFly API URL. Default: http://localhost:9990"
        }
        "--username" = {
            value = "$linuxfabrik_wildfly_xa_datasource_stats_username$"
            description = "WildFly API username. Default: wildfly-monitoring"
        }
        "--warning" = {
            value = "$linuxfabrik_wildfly_xa_datasource_stats_warning$"
            description = "Set the warning threshold."
        }
    }
}


/*
Commands and services for 'wordpress-version' check from LinuxFabrik Monitoring Plugin:

This plugin lets you track if server updates are available.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/wordpress-version
*/

object CheckCommand "_win_linuxfabrik_wordpress_version" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\wordpress-version.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_wordpress_version_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_wordpress_version_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_wordpress_version_always_ok$"
            description = "Always returns OK."
        }
        "--cache-expire" = {
            value = "$linuxfabrik_wordpress_version_cache_expire$"
            description = "The amount of time after which the update check cache expires, in hours. Default: 24"
        }
        "--path" = {
            value = "$linuxfabrik_wordpress_version_path$"
            description = "Local path to your WordPress installation. Default:/var/www/html/wordpress"
        }
    }
}


/*
Commands and services for 'xml' check from LinuxFabrik Monitoring Plugin:

supported.

(Windows version)

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/xml
*/

object CheckCommand "_win_linuxfabrik_xml" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path | replace('\\', '\\\\') }}\\xml.exe" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_xml_help$"
            description = "show this help message and exit"
        }
        "--version" = {
            set_if = "$linuxfabrik_xml_version$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_xml_always_ok$"
            description = "Always return OK."
        }
        "--expect" = {
            value = "$linuxfabrik_xml_expect$"
            description = "String to expect in the xpath's location. If ommitted, just checks if the XPath exists."
        }
        "--namespace" = {
            value = "$linuxfabrik_xml_namespace$"
            description = "If your XPath expression uses namespace prefixes, you must define them in a prefix mapping. This parameter expects a mapping for the namespace prefix used in the XPath expression to namespace URI (repeatable). For example like so: --namespace='prefix1:https://schemas. xmlsoap.org/prefix1/' --namespace='prefix2:https://sch emas.xmlsoap.org/prefix2/'"
        }
        "--no-proxy" = {
            set_if = "$linuxfabrik_xml_no_proxy$"
            description = "Do not use a proxy. Default: False"
        }
        "--password" = {
            value = "$linuxfabrik_xml_password$"
            description = "Password (HTTP Basic Auth)."
        }
        "--timeout" = {
            value = "$linuxfabrik_xml_timeout$"
            description = "Network timeout in seconds. Default: 7 (seconds)"
        }
        "--url" = {
            value = "$linuxfabrik_xml_url$"
            description = "WSDL Endpoint URL. Default: None"
        }
        "--username" = {
            value = "$linuxfabrik_xml_username$"
            description = "Username (HTTP Basic Auth)."
        }
        "--xpath" = {
            value = "$linuxfabrik_xml_xpath$"
            description = "XPath to query. The result must point to a single value (attribute or node content). Lists/arrays are not supported."
        }
    }
}


