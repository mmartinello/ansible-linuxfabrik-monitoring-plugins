/*
Commands and services for 'pip-updates' check from LinuxFabrik Monitoring Plugin:

Checks if there are updates for python packages installed via `pip`.

Code at:
https://github.com/Linuxfabrik/monitoring-plugins/tree/main/check-plugins/pip-updates
*/

object CheckCommand "_linuxfabrik_pip_updates" {
    command = [ "{{ linuxfabrik_monitoring_plugins_dest_path }}/pip-updates" ]

    arguments = {
        "--help" = {
            set_if = "$linuxfabrik_pip_updates_help$"
            description = "show this help message and exit"
        }
        "--updates" = {
            set_if = "$linuxfabrik_pip_updates_updates$"
            description = "show program's version number and exit"
        }
        "--always-ok" = {
            set_if = "$linuxfabrik_pip_updates_alwaysok$"
            description = "Always returns OK."
        }
        "--critical" = {
            value = "$linuxfabrik_pip_updates_critical$"
            description = "Set the critical threshold for the number of pending updates. Default: 100"
        }
        "--test" = {
            value = "$linuxfabrik_pip_updates_test$"
            description = "For unit tests. Needs 'path-to-stdout-file,path-to- stderr-file,expected-retc'."
        }
        "--warning" = {
            value = "$linuxfabrik_pip_updates_warning$"
            description = "Set the warning threshold for the number of pending updates. Default: 10"
        }
        "--virtualenv" = {
            value = "$linuxfabrik_pip_updates_virtualenv$"
            description = "Path of the virtualenv that will be activated before checking for updates. For example: '/opt/sphinx- venv/bin/activate'."
        }
    }
}